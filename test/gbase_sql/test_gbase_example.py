import itertools
import pytest
from gbase_parser_simple.test_help import read_sql


@pytest.mark.parametrize("sql,entry_name", itertools.product([
     "SELECT productnum FROM products;",
     "SELECT productnum FROM products;",
     "SELECT * FROM products;",
     "SELECT productnum FROM products;",
     "SELECT productnum FROM products;",
     "DESC products;",
     "SELECT productnum FROM products;",
     "DESC products;",
     "SELECT productnum FROM products;",
     "CREATE TABLE products(productnum DECIMAL);",
     "DESC products;",
     "INSERT INTO products(productnum) VALUES(191220.443);",
     "INSERT INTO products(productnum) VALUES(19122.4436);",
     "SELECT productnum FROM products;",
     "SELECT productName, LENGTH(productName) AS length, CHAR_LENGTH(productName) AS char_length FROM products;",
     "SELECT productName FROM products WHERE productName = '\u5357\u5927\u901a\u7528';",
     "SELECT productName FROM products WHERE productName = '  \u5357\u5927\u901a\u7528';",
     "CREATE TABLE products (productDate DATE);",
     "INSERT INTO products(productDate) VALUES('2010-09-01');",
     "SELECT productDate FROM products;",
     "CREATE TABLE products (productDate DATE);",
     "INSERT INTO products(productDate) VALUES(NULL);",
     "SELECT productDate FROM products;",
     "CREATE TABLE products (productDate DATE);",
     "INSERT INTO products(productDate) VALUES('2010-09-31');",
     "CREATE TABLE products (productDate TIME);",
     "INSERT INTO products(productDate) VALUES('12:09:44');",
     "SELECT productDate FROM products;",
     "CREATE TABLE products (productDate TIME);",
     "INSERT INTO products(productDate) VALUES('92:09:44');",
     "SELECT productDate FROM products;",
     "CREATE TABLE products (productDate DATETIME);",
     "INSERT INTO products(productDate) VALUES('2010-09-01 12:09:44');",
     "SELECT productDate FROM products;",
     "INSERT INTO products(productDate) VALUES(NOW());",
     "SELECT productDate FROM products;",
     "INSERT INTO products(productDate) VALUES(NULL);",
     "SELECT productDate FROM products;",
     "INSERT INTO products(productDate) VALUES('2013-09-15\n12:09:44.123456');",
     "SELECT productDate FROM products;",
     "INSERT INTO products(productDate) VALUES('2010-09-31 12:09:44');",
     "CREATE TABLE t (a int,b timestamp DEFAULT CURRENT_TIMESTAMP ON UPDATE\nCURRENT_TIMESTAMP, c timestamp DEFAULT '2013-01-01 00:00:01');",
     "SHOW CREATE TABLE t;",
     "SELECT 'hello', '\"hello\"', '\"\"hello\"\"', 'hel''lo', '\\'hello' FROM t;",
     "SELECT 'This\\nIs\\nFour\\nLines' FROM t;",
     "SELECT 'disappearing\\ backslash' FROM t;",
     "DROP TABLE IF EXISTS products;",
     "CREATE TABLE products (productBlob  BLOB);",
     "INSERT INTO products values('abdcdrf\\\\ghi\\'jklm\\\"nopqrs\\0tuvwxyz');",
     "SELECT productBlob FROM products;",
     "SELECT 0xa+1 FROM t;",
     "SELECT x'4742617365' FROM t;",
     "SELECT 0x5061756c FROM t;",
     "SELECT HEX('cat') FROM t;",
     "SELECT 0x636174 FROM t;",
     "SELECT TRUE, true, FALSE, false FROM t;",
     "SELECT 1+1 FROM t;",
     "SELECT 1+1 FROM t;",
     "SELECT 1 /* this is an in-line comment */ + 1 FROM t;",
     "SELECT 1+\n/*\nthis is a\nmultiple-line comment\n*/\n1 FROM t;",
     "SET @t1='abc',@t2=null,@t3=4;",
     "SELECT @t1,@t2,@t3;",
     "DROP TABLE IF EXISTS t;",
     "CREATE TABLE t (a INT);",
     "INSERT INTO t VALUES(1);",
     "SELECT 1+2*3 FROM t;",
     "SELECT (1+2)*3 FROM t;",
     "SELECT 1 = 0 FROM t;",
     "SELECT '0' = 0 FROM t;",
     "SELECT '0.0' = 0 FROM t;",
     "SELECT NULL = NULL FROM t;",
     "SELECT 1 <=> 1, NULL <=> NULL, 1 <=> NULL FROM t;",
     "SELECT 1 = 1, NULL = NULL, 1 = NULL FROM t;",
     "SELECT '01'<>'1';",
     "SELECT 01<>'1';",
     "SELECT 'zapp' <> 'zappp' FROM t;",
     "SELECT 0.1 <= 2 FROM t;",
     "SELECT 2 < 2 FROM t;",
     "SELECT 2 >= 2 FROM t;",
     "SELECT 2 > 2 FROM t;",
     "SELECT 1 IS TRUE, 0 IS FALSE, NULL IS UNKNOWN FROM t;",
     "SELECT 1 IS NOT UNKNOWN, 0 IS NOT UNKNOWN, NULL IS NOT UNKNOWN FROM t;",
     "SELECT 1 IS NULL, 0 IS NULL, NULL IS NULL FROM t;",
     "SELECT 1 IS NOT NULL, 0 IS NOT NULL, NULL IS NOT NULL FROM t;",
     "SELECT 1 BETWEEN 2 AND 3 FROM t;",
     "SELECT 'b' BETWEEN 'a' AND 'c' FROM t;",
     "SELECT 2 BETWEEN 2 AND '3' FROM t;",
     "SELECT COALESCE(NULL,1) FROM t;",
     "SELECT COALESCE(NULL,NULL,NULL) FROM t;",
     "SELECT GREATEST(2,0) FROM t;",
     "SELECT GREATEST(34.0,3.0,5.0,767.0) FROM t;",
     "SELECT GREATEST('B','a','C') FROM t;",
     "SELECT GREATEST('B',BINARY 'a','C') FROM t;",
     "SELECT GREATEST('B',NULL,'C') FROM t;",
     "SELECT 2 IN (0,3,5,'8') FROM t;",
     "SELECT '1' IN (0,3,5,'1') FROM t;",
     "SELECT NULL IN (0,3,5,'wefwf') FROM t;",
     "SELECT sno FROM sc WHERE grade IN (SELECT grade FROM sc WHERE grade>60)\nGROUP BY sno;",
     "SELECT ISNULL(1+1) FROM t;",
     "SELECT ISNULL(1/0) FROM t;",
     "SELECT ISNULL(NULL=NULL) FROM t;",
     "SELECT LEAST(2,0) FROM t;",
     "SELECT LEAST(34.0,3.0,5.0,767.0) FROM t;",
     "SELECT LEAST('B','A','C') FROM t;",
     "SELECT LEAST('B','a', 'C') FROM t;",
     "SELECT LEAST(BINARY 'B',BINARY 'a', 'C') FROM t;",
     "SELECT LEAST('C',NULL,'B') FROM t;",
     "SELECT NOT 10 FROM t;",
     "SELECT NOT 0 FROM t;",
     "SELECT NOT NULL FROM t;",
     "SELECT ! (1+1) FROM t;",
     "SELECT ! 1+1 FROM t;",
     "SELECT (!1)+1 FROM t;",
     "SELECT 1 NOT IN (2,3,null) FROM t;",
     "SELECT 1 XOR 1 FROM t;",
     "SELECT 1 XOR 0 FROM t;",
     "SELECT 1 XOR NULL FROM t;",
     "SELECT 0 XOR NULL FROM t;",
     "SELECT 'a' XOR 'b';",
     "SELECT ('a' AND (NOT 'b')) OR ((NOT 'a') AND 'b');",
     "SELECT 1 XOR 1 XOR 1 FROM t;",
     "SELECT 'a' = 'A' FROM t;",
     "SELECT 'a' = 'a ' FROM t;",
     "SELECT BINARY 'a' = 'A' FROM t;",
     "SELECT BINARY 'a' = 'a ' FROM t;",
     "SELECT CAST(NOW() AS DATE) FROM t;",
     "SELECT 1+'1' FROM t;",
     "SELECT CAST('a' AS BINARY) = 'a ' FROM t;",
     "SELECT BINARY 'a' = 'a ' FROM t;",
     "insert into t values(1, 'aaaaa\uff41', '2011-01-01 11:11:11', '\uff41\uff41\uff41\uff41\n', '\uff41\uff41\uff41\uff41', '\uff41\uff41\uff41\uff41', '\uff41\uff41\uff41\uff41');",
     "select to_single_byte(a),to_single_byte(b), to_single_byte(c),\nto_single_byte(t), to_single_byte(e), to_single_byte(f), to_single_byte(g)\nfrom t;",
     "create table ty as select  to_single_byte(a),to_single_byte(b),  to_single_byte(c), to_single_byte(t), to_single_byte(e), to_single_byte(f),\nto_single_byte(g) from t;",
     "show create table ty;",
     "select * from ty;",
     "SELECT CAST('2002-06-18' as date)  + 30  from t;",
     "SELECT CASE 1 WHEN 1 THEN 'one' WHEN 2 THEN 'two' ELSE 'more' END FROM\nt;",
     "SELECT CASE WHEN 1>0 THEN 'true' ELSE 'false' END FROM t;",
     "SELECT CASE 'c' WHEN 'a' THEN 1 WHEN 'b' THEN 2 END FROM t;",
     "SELECT DECODE(5,1,10,2,20,3,30,4,40, 50) FROM t;",
     "SELECT DECODE( (2 * 5) ,10,100,20,200,600) FROM t;",
     "SELECT IF(1>2,2,3) FROM t;",
     "SELECT IF(1<2,'yes','no') FROM t;",
     "SELECT IF(STRCMP('test','test1'),'no','yes') FROM t;",
     "SELECT IF(1>2,NULL,'no') FROM t;",
     "SELECT IFNULL(1,0) FROM t;",
     "SELECT IFNULL(NULL,10) FROM t;",
     "SELECT NULLIF(1,1) FROM t;",
     "SELECT NULLIF(1,2) FROM t;",
     "SELECT ASCII('2') FROM t;",
     "SELECT ASCII('dx') FROM t;",
     "SELECT BIN(12) FROM t;",
     "SELECT BIT_LENGTH('text') FROM t;",
     "SELECT BIT_LENGTH('\u5357\u5927\u901a\u7528') FROM t;",
     "SHOW VARIABLES LIKE 'CHARACTER_SET_SERVER';",
     "SELECT CHAR(71,66,97,115,101) FROM t;",
     "SELECT CHAR(77,72,NULL,'77') FROM t;",
     "SELECT CHAR_LENGTH('text') FROM t;",
     "SELECT CHAR_LENGTH('\u5357\u5927\u901a\u7528') FROM t;",
     "SELECT CONCAT('GB', 'a', 'se') FROM t;",
     "SELECT CONCAT('GB', NULL, 'se') FROM t;",
     "SELECT CONCAT('hello you ',2) FROM t;",
     "SELECT 'GB' || 'a' || 'se' FROM t;",
     "SELECT CONCAT_WS(',','First name','Second name','Last Name') FROM t;",
     "SELECT CONCAT_WS(',','First name',NULL,'Last Name') FROM t;",
     "SELECT CONV('a',16,2) FROM t;",
     "SELECT CONV('6E',18,8) FROM t;",
     "SELECT CONV(-17,10,-18) FROM t;",
     "SELECT CONV(10+'10'+'10'+0xa,10,10) FROM t;",
     "SELECT ELT(1, 'ej', 'Heja', 'hej', 'foo') FROM t;",
     "SELECT ELT(4, 'ej', 'Heja', 'hej', 'foo') FROM t;",
     "SELECT ELT(9, 'ej', 'Heja', 'hej', 'foo') FROM t;",
     "SELECT EXPORT_SET(5,'Y','N',',',4) FROM t;",
     "SELECT EXPORT_SET(6,'1','0',',',10) FROM t;",
     "SELECT FIELD('ej','Hej', 'ej', 'Heja', 'hej', 'foo') FROM t;",
     "SELECT FIELD('112','12','112','123','213') FROM t;",
     "SELECT FIELD('fo','Hej', 'ej', 'Heja', 'hej', 'foo') FROM t;",
     "SELECT FIND_IN_SET('b','a,b,c,d') FROM t;",
     "SELECT HEX(255) FROM t;",
     "SELECT HEX('abc') FROM t;",
     "SELECT 0x616263 FROM t;",
     "SELECT INSERT('Quadratic', 3, 4, 'What') FROM t;",
     "SELECT INSERT('Quadratic', -1, 4, 'What') FROM t;",
     "SELECT INSERT('Quadratic', 3, 100, 'What') FROM t;",
     "SELECT INSTR('foobarbar', 'bar') FROM t;",
     "SELECT INSTR('xbar', 'foobar') FROM t;",
     "SELECT INSTR('foobarbar', BINARY 'Bar') FROM t;",
     "select INSTR ('welcometobeijing','bei',3);",
     "select INSTR ('112111222222333333','11',1,2);",
     "select INSTR ('welcometochina','e',-1,1);",
     "SELECT LCASE('QUADRATICALLY') FROM t;",
     "SELECT LEFT('foobarbar', 5) FROM t;",
     "SELECT LENGTH('text') FROM t;",
     "SELECT LENGTH('\u5357\u5927\u901a\u7528') FROM t;",
     "select LOAD_FILE('/home/gbase/a.txt');",
     "SELECT LOCATE('bar', 'foobarbar') FROM t;",
     "SELECT LOCATE('xbar', 'foobar') FROM t;",
     "SELECT LOCATE('bar', 'foobarbar',5) FROM t;",
     "SELECT LOCATE(BINARY'bAr', 'foobarbar',5) FROM t;",
     "SELECT LOWER('QUADRATICALLY'),LCASE('QUADRATICALLY') FROM t;",
     "SELECT LPAD ('hi',4,'??') FROM t;",
     "SELECT LPAD('hi',1,'??') FROM t;",
     "SELECT LTRIM(' barbar') FROM t;",
     "SELECT MAKE_SET(1,'a','b','c') FROM t;",
     "SELECT MAKE_SET(1 | 4,'hello','nice','world') FROM t;",
     "SELECT MAKE_SET(1 | 4,'hello','nice',NULL,'world') FROM t;",
     "SELECT MAKE_SET(0,'a','b','c') FROM t;",
     "SELECT SUBSTRING('Quadratically',5,6),MID('Quadratically',5,6) FROM\nt;",
     "DROP TABLE IF EXISTS t_user;",
     "CREATE TABLE t_user (id int ,name varchar(10),address varchar(200));",
     "INSERT INTO t_user VALUES (1,'Tom','East\nStreet'),(2,'Mike',NULL),(3,'Rose','TANGREN ROAD'),(4,'White',NULL);",
     "SELECT id,name,NVL(address,'UNKOWN') FROM t_user;",
     "SELECT OCT(12) FROM t;",
     "SELECT OCT(NULL) FROM t;",
     "SELECT ORD('2') FROM t;",
     "SELECT ORD('\u5357\u5927\u901a\u7528') FROM t;",
     "SELECT REPEAT('GBase', 3) FROM t;",
     "SELECT REPLACE('www.generaldata.com.cn', 'w', 'Ww') FROM t;",
     "SELECT REVERSE('abc') FROM t;",
     "SELECT RIGHT('foobarbar', 4) FROM t;",
     "SELECT RPAD('hi',5,'?') FROM t;",
     "SELECT RPAD('hiacd',2,'?') FROM t;",
     "SELECT RTRIM('barbar  ') FROM t;",
     "SELECT SUBSTRING('Quadratically',5) FROM t;",
     "SELECT SUBSTRING('Quadratically',5,6) FROM t;",
     "SELECT SUBSTRING('Sakila', -3) FROM t;",
     "SELECT SUBSTRING('Sakila', -5, 3) FROM t;",
     "SELECT SUBSTRING_INDEX('www.generaldata.com.cn', '.', 2) FROM t;",
     "SELECT SUBSTRING_INDEX('www.generaldata.com.cn', '.', -3) FROM t;",
     "SELECT TO_CHAR(987654321,'999,999,999') FROM t;",
     "SELECT TO_CHAR(54321,'999,999,999') FROM t;",
     "SELECT TO_CHAR(54321,'990,999,999') FROM t;",
     "SELECT TO_CHAR(-54321,'990,999,999') FROM t;",
     "SELECT TO_CHAR(12.97,'099.99') FROM t;",
     "SELECT TO_CHAR(-12.97,'099.090') FROM t;",
     "SELECT TO_CHAR(12.97,'099.099') FROM t;",
     "SELECT TO_CHAR(84.77,'$0099.99') FROM t;",
     "SELECT TO_CHAR(84.77,'0099.99$') FROM t;",
     "SELECT TO_CHAR(0,'B00') FROM t;",
     "SELECT HEX(TO_CHAR(0,'B00')) FROM t;",
     "SELECT TO_CHAR(1,'B00') FROM t;",
     "SELECT TO_CHAR(11,'B00') FROM t;",
     "SELECT TO_CHAR(2008032001,'9.9EEEE') FROM t;",
     "SELECT TO_CHAR(2008032001,'c9.99EEEE') FROM t;",
     "SELECT TO_CHAR(10.3,'FM90.9') FROM t;",
     "SELECT TO_CHAR(10.3,'90.9') FROM t;",
     "SELECT TO_CHAR(11,'TME') AS f_SHOW FROM t;",
     "SELECT TO_CHAR(11,'X') FROM t;",
     "SELECT TO_CHAR(16,'XX') FROM t;",
     "SELECT TO_CHAR(16,'X') FROM t;",
     "SELECT TO_CHAR(NOW(),'YYYY/MM/DD') FROM t;",
     "SELECT TO_CHAR(NOW(),'YYYY-MM-DD') FROM t;",
     "SELECT TO_CHAR(NOW(),'YYYY,MM,DD') FROM t;",
     "SELECT TO_CHAR(CURDATE(),'YYYY;MM;DD') FROM t;",
     "SELECT TO_CHAR(NOW(),'YYYY\"\u5e74\"MM\"\u6708\"DD\"\u65e5\"') FROM t;",
     "SELECT TO_CHAR(CURDATE(),'AD YYYY-MM-DD') FROM t;",
     "SELECT NOW(),TO_CHAR(NOW(),'AM HH12:MI:SS') FROM t;",
     "SELECT NOW(),TO_CHAR(TIMESTAMPADD(HOUR,8,NOW()),'AM HH12:MI:SS') AS\nf_FormatShow FROM t;",
     "SELECT TO_CHAR(CURDATE(),'CC') FROM t;",
     "SELECT CURDATE(),TO_CHAR(CURDATE(),'D') FROM t;",
     "SELECT CURDATE(),TO_CHAR(CURDATE(),'DAY') FROM t;",
     "SELECT CURDATE(),TO_CHAR(CURDATE(),'DD') FROM t;",
     "SELECT CURDATE(),TO_CHAR(CURDATE(),'DDD') FROM t;",
     "SELECT CURDATE(),TO_CHAR(CURDATE(),'DY') FROM t;",
     "SELECT CURRENT_TIMESTAMP(),TO_CHAR(CURRENT_TIMESTAMP(),'FF') FROM t;",
     "SELECT CURRENT_TIMESTAMP(),TO_CHAR(CURRENT_TIMESTAMP(),'FF9') FROM t;",
     "SELECT CURRENT_TIMESTAMP(),TO_CHAR(CURRENT_TIMESTAMP(),'FX\nYYYY-MM-DD') FROM t;",
     "SELECT CURRENT_TIMESTAMP(),TO_CHAR(CURRENT_TIMESTAMP(),'FM\nYYYY-MM-DD') FROM t;",
     "SELECT CURRENT_TIMESTAMP(),TO_CHAR(CURRENT_TIMESTAMP(),'HH') FROM t;",
     "SELECT NOW(),TO_CHAR(NOW(),'HH12') FROM t;",
     "SELECT NOW(),TO_CHAR(TIMESTAMPADD(HOUR,8,NOW()),'HH24') FROM t;",
     "SELECT TO_CHAR(NOW(),'IW') FROM t;",
     "SELECT NOW(),TO_CHAR(NOW(),'MI') FROM t;",
     "SELECT NOW(),TO_CHAR(NOW(),'MM') FROM t;",
     "SELECT NOW(),TO_CHAR(NOW(),'MON') FROM t;",
     "SELECT NOW(),TO_CHAR(NOW(),'MONTH') FROM t;",
     "SELECT NOW(),TO_CHAR(NOW(),'PM HH12:MI:SS') FROM t;",
     "SELECT NOW(),TO_CHAR(TIMESTAMPADD(HOUR,8,NOW()),'PM HH12:MI:SS') AS\nf_FormatShow FROM t;",
     "SELECT NOW(),TO_CHAR(NOW(),'Q YYYY-MM-DD') FROM t;",
     "SELECT NOW(),TO_CHAR(NOW(),'RM') FROM t;",
     "SELECT TO_CHAR(NOW(),'RR') FROM t;",
     "SELECT TO_CHAR(NOW(),'RRRR') FROM t;",
     "SELECT TO_CHAR(TIMESTAMPADD(YEAR,-1200,NOW()),'RRRR') FROM t;",
     "SELECT NOW(),TO_CHAR(NOW(),'SCC') FROM t;",
     "SELECT TIMESTAMPADD(YEAR,-20,NOW()) AS\nf_DATETIME,TO_CHAR(TIMESTAMPADD(YEAR,-20,NOW()),'SCC') AS f_AD FROM t;",
     "SELECT NOW(),TO_CHAR(NOW(),'SS'),TO_CHAR(NOW(),'SSSSS') FROM t;",
     "SELECT NOW(),TO_CHAR(NOW(),'TS') FROM t;",
     "SELECT TIMESTAMPADD(HOUR,8,NOW()) AS\nf_now,TO_CHAR(TIMESTAMPADD(HOUR,8,NOW()),'TS') AS f_now_ts FROM t;",
     "SELECT NOW(),TO_CHAR(NOW(),'W') FROM t;",
     "SELECT TO_NUMBER('-12.340000') FROM t;",
     "SELECT TO_NUMBER('12.34') FROM t;",
     "SELECT TO_NUMBER('+000000123') FROM t;",
     "SELECT TO_NUMBER('1234') FROM t;",
     "SELECT TRANSLATE('123abc','2dc','4e') FROM t;",
     "SELECT TRANSLATE('13579abc','13a','24') FROM t;",
     "SELECT TRANSLATE('23',NULL,'a') FROM t;",
     "SELECT TRIM('  bar  ') FROM t;",
     "SELECT TRIM(LEADING 'x' FROM 'xxxbarxxx') FROM t;",
     "SELECT TRIM(BOTH 'x' FROM 'xxxbarxxx') FROM t;",
     "SELECT TRIM(TRAILING 'xyz' FROM 'barxxyz') FROM t;",
     "SELECT UCASE('Gbase') FROM t;",
     "SELECT UNHEX('4742617365') FROM t;",
     "SELECT 0x4742617365 FROM t;",
     "SELECT UNHEX(HEX('string')) FROM t;",
     "SELECT HEX(UNHEX('1267')) FROM t;",
     "SELECT UPPER('Hej') FROM t;",
     "SELECT 1 + '1' FROM t;",
     "SELECT CONCAT(2,' test') FROM t;",
     "SELECT 38.8, CONCAT(38.8) FROM t;",
     "SELECT 38.8, CAST(38.8 AS CHAR) FROM t;",
     "SELECT 'David!' LIKE 'David_' FROM t;",
     "SELECT 'David!' LIKE '%D%v%' FROM t;",
     "SELECT 'David!' LIKE 'David\\_' FROM t;",
     "SELECT 'David_' LIKE 'David\\_' FROM t;",
     "SELECT 'David_' LIKE 'David|_' ESCAPE '|' FROM t;",
     "SELECT 'abc' LIKE 'ABC' FROM t;",
     "SELECT 'abc' LIKE BINARY 'ABC' FROM t;",
     "SELECT 10 LIKE '1%' FROM t;",
     "SELECT 'David_' NOT LIKE 'David|_';",
     "SELECT 'David_' NOT LIKE 'David|_' ESCAPE '|';",
     "SELECT 'Monty!' REGEXP 'm%y%%' FROM t;",
     "SELECT 'Monty!' REGEXP '.*' FROM t;",
     "SELECT 'new*\\n*line' REGEXP 'new\\\\*.\\\\*line' FROM t;",
     "SELECT 'a' REGEXP 'A', 'a' REGEXP BINARY 'A' FROM t;",
     "SELECT 'a' REGEXP '^[a-d]' FROM t;",
     "SELECT NOT ('Monty!' REGEXP 'm%y%%' ) FROM t;",
     "SELECT NULL REGEXP 'David_', 'David!' REGEXP NULL FROM t;",
     "SELECT STRCMP('text', 'text2') FROM t;",
     "SELECT STRCMP('text2', 'text') FROM t;",
     "SELECT STRCMP('text', 'text') FROM t;",
     "drop table if exists tb1;",
     "drop table if exists tb2;",
     "create table tb1(v1 varchar(25),c1 char(11),i1 int);",
     "insert into tb1 values('000-111-999','000*111*999',12);",
     "create table tb2(v2 varchar(25),c2 char(11),i2 int);",
     "insert into tb2 values('000-111-999','000*111*999',12);",
     "select regexp_replace('000-111-999','-','') from tb1;",
     "SELECT 3+5 FROM t;",
     "SELECT 3-5 FROM t;",
     "SELECT - 2 FROM t;",
     "SELECT 3*5 FROM t;",
     "SELECT 3/5 FROM t;",
     "SELECT 102/(1-1) FROM t;",
     "SELECT 5 DIV 2 FROM t;",
     "SELECT ABS(2) FROM t;",
     "SELECT ABS(-32) FROM t;",
     "SELECT ACOS(1) FROM t;",
     "SELECT ACOS(1.0001) FROM t;",
     "SELECT ACOS(0) FROM t;",
     "SELECT ASIN(0.2) FROM t;",
     "SELECT ASIN(2) FROM t;",
     "SELECT ATAN(2) FROM t;",
     "SELECT ATAN(-2) FROM t;",
     "SELECT ATAN(-2,2) FROM t;",
     "SELECT ATAN2(PI(),0) FROM t;",
     "SELECT CEILING(1.23) FROM t;",
     "SELECT CEIL(-1.23) FROM t;",
     "SELECT COS(PI())FROM t;",
     "SELECT COT(12) FROM t;",
     "SELECT COT(0) FROM t;",
     "SELECT CRC32('GBase') FROM t;",
     "SELECT CRC32(1.034) FROM t;",
     "SELECT DEGREES(PI())FROM t;",
     "SELECT EXP(2) FROM t;",
     "SELECT EXP(-2) FROM t;",
     "SELECT FLOOR(1.23) FROM t;",
     "SELECT FLOOR(-1.23) FROM t;",
     "SELECT FLOOR(NULL) FROM t;",
     "SELECT LN(2) FROM t;",
     "SELECT LN(-2) FROM t;",
     "SELECT LOG(2) FROM t;",
     "SELECT LOG(-2) FROM t;",
     "SELECT LOG(2,65536) FROM t;",
     "SELECT LOG(1,100) FROM t;",
     "SELECT LOG2(65536) FROM t;",
     "SELECT LOG2(-100) FROM t;",
     "SELECT LOG10(2) FROM t;",
     "SELECT LOG10(100) FROM t;",
     "SELECT LOG10(-100) FROM t;",
     "SELECT MOD(234, 10) FROM t;",
     "SELECT 253 % 7 FROM t;",
     "SELECT MOD(29,9) FROM t;",
     "SELECT 29 MOD 9 FROM t;",
     "SELECT MOD(34.5,3) FROM t;",
     "SELECT 253 % 7, MOD(253,7), 253 MOD 7 FROM t;",
     "SELECT PI()FROM t;",
     "SELECT POW(2,2) FROM t;",
     "SELECT POW(2,-2) FROM t;",
     "SELECT RADIANS(90) FROM t;",
     "SELECT RAND()FROM t;",
     "SELECT RAND()FROM t;",
     "SELECT RAND()FROM t;",
     "SELECT RAND(20) FROM t;",
     "SELECT RAND(20) FROM t;",
     "SELECT ROUND(-1.23) FROM t;",
     "SELECT ROUND(-1.58) FROM t;",
     "SELECT ROUND(1.58) FROM t;",
     "SELECT ROUND(1.298, 1) FROM t;",
     "SELECT ROUND(1.298, 0) FROM t;",
     "SELECT ROUND(23.298, -1) FROM t;",
     "SELECT ROUND(2.5), ROUND(25E-1) FROM t;",
     "DROP TABLE IF EXISTS t1;",
     "INSERT INTO t1 VALUES(2.5),(2.5E0);",
     "SELECT d FROM t1;",
     "SELECT ROUND(2.5), ROUND(-2.5) FROM t;",
     "SELECT SIGN(-32) FROM t;",
     "SELECT SIGN(0) FROM t;",
     "SELECT SIGN(234) FROM t;",
     "SELECT SIN(PI())FROM t;",
     "SELECT SQRT(4) FROM t;",
     "SELECT SQRT(20) FROM t;",
     "SELECT TAN(PI()+1) FROM t;",
     "SELECT TRUNCATE(1.223,1) FROM t;",
     "SELECT TRUNCATE(1.999,1) FROM t;",
     "SELECT TRUNCATE(1.999,0) FROM t;",
     "SELECT TRUNCATE(-1.999,1) FROM t;",
     "SELECT TRUNCATE(122,-2) FROM t;",
     "SELECT TRUNCATE(10.28*100,0) FROM t;",
     "SELECT NOW() FROM t;",
     "SELECT CURDATE() FROM t;",
     "SELECT CURTIME() FROM t;",
     "SELECT UTC_DATE() FROM t;",
     "SELECT UTC_TIME() FROM t;",
     "SELECT UTC_TIMESTAMP() FROM t;",
     "SELECT CURRENT_TIMESTAMP() FROM t;",
     "SELECT CURRENT_TIME() FROM t;",
     "SELECT CURRENT_DATE() FROM t;",
     "set time_zone='+8:00';",
     "show variables like '%time_zone%';",
     "set time_zone='SYSTEM';",
     "show variables like '%time_zone%';",
     "set time_zone='US/Central';",
     "show variables like '%time_zone%';",
     "set time_zone='SYSTEM';",
     "show variables like '%zone%';",
     "\\! date\nMon Jan 22 19:22:09 PST 2018\ngbase> select now();",
     "\\! date -u +%s\n1516677890\ngbase> select from_unixtime(1516677890);",
     "\\! date\nMon Jan 22 19:25:10 PST 2018  \uf06c  \u5728\u590f\u4ee4\u65f6\u5185\uff0c\u7cfb\u7edf\u65f6\u95f4\u8ddf gbase \u5185\u65f6\u95f4\u4e00\u81f4\u3002    ; set time_zone='SYSTEM';",
     "show variables like '%zone%';",
     "\\! date '+%Y-%m-%d %H:%M:%S'\n2017-03-11 05:06:06  - 170 -  \u5357\u5927\u901a\u7528\u6570\u636e\u6280\u672f\u80a1\u4efd\u6709\u9650\u516c\u53f8  \fGBase 8a MPP Cluster SQL\u53c2\u8003\u624b\u518c\ngbase> select now();",
     "\\! date -u +%s\n1489237617\ngbase> select from_unixtime(1489237617);",
     "SELECT ADDDATE('2010-01-02', INTERVAL 31 DAY) FROM t;",
     "SELECT ADDDATE('2010-01-02', 31 ) FROM t;",
     "SELECT ADDTIME('2010-01-02 23:59:59.999999','1 1:1:1.000002') FROM t;",
     "SELECT ADDTIME('01:00:00.999999', '02:00:00.999998') FROM t;",
     "SELECT NOW(),ADD_MONTHS(NOW(),3) AS f_Show FROM t;",
     "SELECT NOW(),ADD_MONTHS(NOW(),-3) AS f_Show FROM t;",
     "SELECT ADD_MONTHS(TO_DATE('2012-9-15','YYYY-MM-DD'),3) AS f_Show FROM\nt;",
     "SELECT ADD_MONTHS(TO_DATE('2012-9-15 12:20:31','YYYY-MM-DD\nHH24:MI:SS'),3) AS f_Show FROM t;",
     "SELECT ADD_MONTHS(TO_DATE('2012-8-31','YYYY-MM-DD'),3) AS f_Show FROM\nt;",
     "SELECT ADD_MONTHS(TO_DATE('2015-11-30','YYYY-MM-DD'),-1) AS f_Show\nFROM t;",
     "SELECT ADD_MONTHS(TO_DATE('2017-02-28','YYYY-MM-DD'),-1);",
     "SELECT ADD_MONTHS(TO_DATE('2017-02-28','YYYY-MM-DD'),-1,1);",
     "SELECT CONVERT_TZ('2010-01-01 12:00:00','+00:00','-07:00') FROM t;",
     "SELECT CONVERT_TZ('2007-03-11 2:00:00','US/Eastern','US/Central');",
     "SELECT CONVERT_TZ('2007-03-11 3:00:00','US/Eastern','US/Central');",
     "SELECT CONVERT_TZ('2007-03-11 2:00:00','-6:00','-7:00');",
     "SELECT CONVERT_TZ('2007-03-11 3:00:00','-6:00','-7:00');",
     "SELECT CURDATE() FROM t;",
     "SELECT CURDATE() + 0 FROM t;",
     "SELECT CURRENT_DATE() FROM t;",
     "SELECT CURRENT_DATE FROM t;",
     "SELECT CURDATE() FROM t;",
     "SELECT CURRENT_TIME() FROM t;",
     "SELECT CURTIME() FROM t;",
     "SELECT CURRENT_TIMESTAMP FROM t;",
     "SELECT CURRENT_TIMESTAMP() FROM t;",
     "SELECT NOW() FROM t;",
     "SELECT CURTIME() FROM t;",
     "SELECT CURTIME() + 0 FROM t;",
     "SELECT DATE('2011-09-05 11:22:03') FROM t;",
     "SELECT DATE('2011-09-32 11:22:03') FROM t;",
     "SHOW WARNINGS;",
     "SELECT DATEDIFF('2010-08-30 23:59:59','2010-08-29') FROM t;",
     "SELECT DATEDIFF('2010-07-31 23:59:59','2010-08-30') FROM t;",
     "SELECT '2010-08-30 23:59:59' + INTERVAL 1 SECOND FROM t;",
     "SELECT DATE_ADD('2010-08-30 23:59:59',INTERVAL 1 SECOND) FROM t;",
     "SELECT INTERVAL 1 DAY + '2010-12-31 23:59:59' FROM t;",
     "SELECT DATE_ADD('2010-12-31 23:59:59',INTERVAL 1 DAY) FROM t;",
     "SELECT DATE_ADD('2010-12-31 23:59:59', INTERVAL '1:1' MINUTE_SECOND)\nFROM t;",
     "SELECT DATE_SUB('2010-01-01 00:00:00', INTERVAL '1 1:1:1' DAY_SECOND)\nFROM t;",
     "SELECT DATE_ADD('2010-01-01 00:00:00', INTERVAL '-1 10' DAY_HOUR) FROM\nt;",
     "SELECT DATE_ADD('2010-01-01 00:00:00', INTERVAL '-1 -10' DAY_HOUR) FROM\nt;",
     "SELECT DATE_SUB('2010-01-02', INTERVAL 31 DAY) FROM t;",
     "SELECT DATE_ADD('2010-08-30', INTERVAL 1 DAY) FROM t;",
     "SELECT DATE_ADD('2010-01-01', INTERVAL 1 HOUR) FROM t;",
     "SELECT DATE_ADD('2010-01-30', INTERVAL 1 MONTH) FROM t;",
     "SELECT DATE_FORMAT('2010-10-04 22:23:00', '%W %M %Y') FROM t;",
     "SELECT DATE_FORMAT('2010-10-04 22:23:00', '%H:%i:%s') FROM t;",
     "SELECT DATE_FORMAT('2010-10-04 22:23:00','%D %y %a %d %m %b %j') FROM\nt;",
     "SELECT DATE_FORMAT('2010-10-04 22:23:00','%H %k %I %r %T %S %w') FROM\nt;",
     "SELECT DATE_FORMAT('2010-01-01', '%X %V') FROM t;",
     "SELECT DAY('2010-08-30'),DAYOFMONTH('2010-08-30') FROM t;",
     "SELECT DAYNAME('2010-08-30') FROM t;",
     "SELECT DAYOFMONTH('2010-08-30') FROM t;",
     "SELECT DAYOFMONTH('2001-11-00') FROM t;",
     "SELECT DAYOFMONTH('2001-11-10') FROM t;",
     "SELECT DAYOFWEEK('2010-08-30') FROM t;",
     "SELECT DAYOFYEAR('2010-08-30') FROM t;",
     "SELECT DAYOFYEAR('2000-12-31') FROM t;",
     "SELECT EXTRACT(YEAR FROM '2010-08-30') FROM t;",
     "SELECT EXTRACT(YEAR_MONTH FROM '2010-08-30 01:02:03') FROM t;",
     "SELECT EXTRACT(DAY_MINUTE FROM '2010-08-30 01:02:03') FROM t;",
     "SELECT EXTRACT(MICROSECOND FROM '2010-08-30 10:30:00.00123') FROM t;",
     "SELECT EXTRACT(WEEK FROM '2011-09-05 10:30:00.00123') FROM t;",
     "SELECT FROM_DAYS(734309) FROM t;",
     "SELECT FROM_UNIXTIME(1275996580) FROM t;",
     "SELECT FROM_UNIXTIME(1275996580) + 0 FROM t;",
     "SELECT FROM_UNIXTIME(UNIX_TIMESTAMP(),'%Y %D %M %h:%i:%s %x') FROM t;",
     "SELECT DATE_FORMAT('2010-08-30',GET_FORMAT(DATE,'EUR')) FROM t;",
     "SELECT STR_TO_DATE('08.30.2010',GET_FORMAT(DATE,'USA')) FROM t;",
     "SELECT HOUR('10:05:03') FROM t;",
     "SELECT HOUR('272:59:59') FROM t;",
     "SELECT LAST_DAY('2011-08-30') FROM t;",
     "SELECT LAST_DAY('2011-02-05') FROM t;",
     "SELECT LAST_DAY('2011-01-01 01:01:01') FROM t;",
     "SELECT LAST_DAY('2011-08-32') FROM t;",
     "SHOW WARNINGS;",
     "SELECT LOCALTIME FROM t;",
     "SELECT LOCALTIME() FROM t;",
     "SELECT NOW() FROM t;",
     "SELECT LOCALTIMESTAMP FROM t;",
     "SELECT LOCALTIMESTAMP() FROM t;",
     "SELECT NOW() FROM t;",
     "SELECT MAKEDATE(2011,31), MAKEDATE(2011,32) FROM t;",
     "SELECT MAKEDATE(2010,365), MAKEDATE(2011,365) FROM t;",
     "SELECT MAKEDATE(2011,0) FROM t;",
     "SELECT MAKETIME(12,15,30) FROM t;",
     "SELECT MICROSECOND('12:00:00.123456') FROM t;",
     "SELECT MICROSECOND('2009-12-31 23:59:59.000010') FROM t;",
     "SELECT MICROSECOND('2009-12-31 23:59:59.1234567') FROM t;",
     "SHOW WARNINGS;",
     "SELECT MINUTE('01-02-03 10:08:03') FROM t;",
     "SELECT MINUTE('01-02-03 10:60:03') FROM t;",
     "SHOW WARNINGS;",
     "SELECT MONTH('2011-08-30') FROM t;",
     "SELECT MONTH('2011-13-30') FROM t;",
     "SELECT MONTHNAME('2011-08-30') FROM t;",
     "SELECT NOW() FROM t;",
     "SELECT PERIOD_ADD(1108,2) FROM t;",
     "SELECT PERIOD_ADD(201108,2) FROM t;",
     "SELECT PERIOD_DIFF(9802,199703) FROM t;",
     "SELECT QUARTER('10-08-01') FROM t;",
     "SELECT SECOND('10:05:03') FROM t;",
     "SELECT SEC_TO_TIME(2378) FROM t;",
     "SELECT SEC_TO_TIME(2378) + 0 FROM t;",
     "SELECT STR_TO_DATE('30.08.2010 09.20', '%d.%m.%Y %H.%i') FROM t;",
     "SELECT STR_TO_DATE('10arp', '%carp') FROM t;",
     "SELECT STR_TO_DATE('2010-15-08 00:00:00','%Y-%m-%d %H:%i:%s') FROM t;",
     "SELECT STR_TO_DATE('00/00/0000', '%m/%d/%Y') FROM t;",
     "SELECT STR_TO_DATE('08/30/2011', '%m/%d/%Y') FROM t;",
     "SELECT str_to_date('201135 Monday', '%X%V %W') FROM t;",
     "SELECT str_to_date('201135', '%X%V %W') FROM t;",
     "SELECT DATE_SUB('2011-01-02', INTERVAL 31 DAY) FROM t;",
     "SELECT SUBDATE('2011-01-02', INTERVAL 31 DAY) FROM t;",
     "SELECT SUBDATE('2011-01-02 12:00:00', 31) FROM t;",
     "SELECT SUBTIME('2009-12-31 23:59:59.999999','1 1:1:1.000002') FROM t;",
     "SELECT SUBTIME('01:00:00.999999', '02:00:00.999998') FROM t;",
     "SELECT SYSDATE() FROM t;",
     "SELECT TIME('2011-08-30 01:02:03') FROM t;",
     "SELECT TIME('2011-08-30 01:02:03.000123') FROM t;",
     "SELECT TIMEDIFF('2000:01:01 00:00:00','2000:01:01 00:00:00.000001')\nFROM t;",
     "SELECT TIMEDIFF('2011-08-31 23:59:59.000001','2011-08-30\n01:01:01.000002') FROM t;",
     "SELECT TIMESTAMP('2011-08-30') FROM t;",
     "SELECT TIMESTAMP('2011-12-31 12:00:00','12:00:00') FROM t;",
     "SELECT TIMESTAMPADD(MINUTE,1,'2011-01-02') FROM t;",
     "SELECT TIMESTAMPADD(WEEK,1,'2011-01-02') FROM t;",
     "SELECT TIMESTAMPDIFF(MONTH,'2011-02-01','2011-05-01') FROM t;",
     "SELECT TIMESTAMPDIFF(YEAR,'2011-05-01','2001-01-01') FROM t;",
     "SELECT TIME_FORMAT('100:00:00', '%H %k %h %I %l') FROM t;",
     "SELECT TIME_TO_SEC('22:23:00') FROM t;",
     "SELECT TIME_TO_SEC('00:39:38') FROM t;",
     "SELECT TO_DATE('2011-11-15','YYYY-MM-DD') FROM t;",
     "SELECT TO_DATE('2011/11/15','YYYY/MM/DD') FROM t;",
     "SELECT TO_DATE('2011,11,15','YYYY,MM,DD') FROM t;",
     "SELECT TO_DATE('2011:11:15','YYYY:MM:DD') FROM t;",
     "SELECT TO_DATE('2011.11.15','YYYY.MM.DD') FROM t;",
     "SELECT TO_DATE('2011 11 14','YYYY MM DD') FROM t;",
     "SELECT TO_DATE('11-15','MM-DD') FROM t;",
     "SELECT TO_DATE('11-11-15','YY-MM-DD') FROM t;",
     "SELECT TO_DATE('11-11-15','YYYY-MM-DD') FROM t;",
     "SELECT TO_DATE('2011-11-15','YYYY-MM-DD') FROM t;",
     "SELECT TO_DATE('2011-15','YYYY-DD') FROM t;",
     "SELECT TO_DATE('2011-11-15','YYYY-MM-DD') FROM t;",
     "SELECT TO_DATE('2011-11','YYYY-MM') FROM t;",
     "SELECT TO_DATE('2011  318','YYYY DDD') FROM t;",
     "SELECT TO_DATE('2010  55','YYYY DDD') FROM t;",
     "SELECT TO_DATE('2000 366','YYYY DDD') FROM t;",
     "SELECT TO_DATE('2011-11-15 12:15:10','YYYY-MM-DD HH:MI:SS') FROM t;",
     "SELECT TO_DATE('2011-11-15 12:15:10','YYYY-MM-DD HH12:MI:SS') FROM t;",
     "SELECT TO_DATE('2011-11-15 12:15:10','YYYY-MM-DD HH24:MI:SS') FROM t;",
     "SELECT TO_DATE('2011-11-14 13:00:00','YYYY-MM-DD HH:MI:SS') FROM t;",
     "SELECT TO_DATE('2011-11-14 13:00:00','YYYY-MM-DD HH24:MI:SS') FROM t;",
     "SELECT TO_DATE('2000 1111','YYYY MISS') FROM t;",
     "SELECT TO_DATE('2011-11-15 8:15:20 AM','YYYY-MM-DD HH:MI:SS AM') FROM\nt;",
     "SELECT TO_DATE('2011-11-15 8:15:20 PM','YYYY-MM-DD HH:MI:SS PM') FROM\nt;",
     "SELECT TO_DATE('2011-11-15 8:15:20 AM','YYYY-MM-DD HH:MI:SS PM') FROM\nt;",
     "SELECT TO_DATE('2011-11-15 8:15:20PM','YYYY-MM-DD HH:MI:SS AM') FROM\nt;",
     "SELECT NOW(),TO_DATE(TO_CHAR(NOW(),'YYYY-MM-DD HH:MI:SS'),'YYYY-MM-DD\nHH:MI:SS') AS f_format FROM t;",
     "SELECT NOW(),TO_DATE(TO_CHAR(NOW(),'YYYY-MM-DD HH:SS'),'YYYY-MM-DD\nHH:SS') AS f_format FROM t;",
     "SELECT NOW(),TO_DATE(TO_CHAR(NOW(),'YYYY-MM-DD HH:MI:SS'),'YYYY-MM-DD\n\u5357\u5927\u901a\u7528\u6570\u636e\u6280\u672f\u80a1\u4efd\u6709\u9650\u516c\u53f8  - 229 -  \fGBase 8a MPP Cluster SQL\u53c2\u8003\u624b\u518c\nHH:MI:SS') AS f_format FROM t;",
     "SELECT NOW(),TO_DATE(TO_CHAR(NOW(),'YYYY-MM-DD HH:MI'),'YYYY-MM-DD\nHH:MI') AS f_format FROM t;",
     "SELECT TO_DAYS(950501) FROM t;",
     "SELECT TO_DAYS('2010-08-30') FROM t;",
     "SELECT TO_DAYS('2011-08-30'), TO_DAYS('11-08-30') FROM t;",
     "SELECT TO_DAYS('1581-08-30') FROM t;",
     "SELECT TRUNC(current_date,'year') FROM t;",
     "SELECT TRUNC(current_date,'yyyy') FROM t;",
     "SELECT TRUNC(current_date,'mm') FROM t;",
     "SELECT TRUNC(current_date,'dd') FROM t;",
     "SELECT TRUNC(current_date,'hh') FROM t;",
     "SELECT TRUNC(current_date,'mi') FROM t;",
     "SELECT UNIX_TIMESTAMP() FROM t;",
     "SELECT UNIX_TIMESTAMP('2011-08-30 22:23:00') FROM t;",
     "SELECT UTC_DATE(), UTC_DATE() + 0 FROM t;",
     "SELECT UTC_TIME(), UTC_TIME() + 0 FROM t;",
     "SELECT UTC_TIMESTAMP(), UTC_TIMESTAMP() + 0 FROM t;",
     "SELECT WEEK('2010-08-31') FROM t;",
     "SELECT WEEK('2011-08-30',0) FROM t;",
     "SELECT WEEK('2011-08-30',1) FROM t;",
     "SELECT WEEK('2011-12-31',1) FROM t;",
     "SELECT YEAR('2011-01-01'), WEEK('2011-01-01',0) FROM t;",
     "SELECT YEAR('2011-01-01'), WEEK('2011-01-01',2) FROM t;",
     "SELECT YEAR('2011-01-01'), WEEK('2011-01-01',3) FROM t;",
     "SELECT YEAR('2011-01-01'), WEEK('2011-01-01',6) FROM t;",
     "SELECT YEAR('2000-01-01'), WEEK('2000-01-01',0) FROM t;",
     "SELECT WEEK('2011-01-01',2) FROM t;",
     "SELECT YEARWEEK('2011-01-01') FROM t;",
     "SELECT MID(YEARWEEK('2011-01-01'),5,2) FROM t;",
     "SELECT WEEKDAY('2011-08-29 22:23:00') FROM t;",
     "SELECT WEEKDAY('2010-08-05') FROM t;",
     "SELECT WEEKOFYEAR('2010-08-30') FROM t;",
     "SELECT YEAR('2011-02-03') FROM t;",
     "SELECT YEARWEEK('2011-02-01',0) FROM t;",
     "SELECT YEARWEEK('2011-01-01') FROM t;",
     "SELECT YEARWEEK('2011-01-01',0),WEEK('2011-01-01',0)  FROM t;",
     "SELECT YEARWEEK('2011-01-01',1),WEEK('2011-01-01',1) FROM t;",
     "SELECT 29 | 15 FROM t;",
     "SELECT 29 & 15 FROM t;",
     "SELECT 1 ^ 1 FROM t;",
     "SELECT 1 ^ 0 FROM t;",
     "SELECT 11 ^ 3 FROM t;",
     "SELECT 1 << 2 FROM t;",
     "SELECT 4 >> 2 FROM t;",
     "SELECT BIT_COUNT(29) FROM t;",
     "SELECT ENCRYPT('hello') FROM t;",
     "SELECT MD5('testing') FROM t;",
     "SELECT SHA1('abc') FROM t;",
     "SELECT BENCHMARK(1000000,'hello') FROM t;",
     "SELECT CHARSET('\u793a\u4f8b') FROM t;",
     "SELECT CHARSET(USER()) FROM t;",
     "SELECT COLLATION('abc') FROM t;",
     "SELECT CONNECTION_ID() FROM t;",
     "SELECT USER() FROM t;",
     "SELECT CURRENT_USER() FROM t;",
     "SELECT DATABASE() FROM t;",
     "SELECT DATABASE() FROM t;",
     "SELECT SESSION_USER() FROM t;",
     "SELECT SYSTEM_USER() FROM t;",
     "SELECT USER() FROM t;",
     "SELECT SUBSTRING_INDEX(USER(),'@',1) FROM t;",  ## gbase
     "SELECT VERSION()FROM t;",
     "SELECT FORMAT(12332.123456, 4) FROM t;",
     "SELECT FORMAT(12332.1,4) FROM t;",
     "SELECT FORMAT(12332.2,0) FROM t;",
     "SELECT INET_ATON('209.207.224.40') FROM t;",
     "SELECT INET_ATON('127.0.0.1'), INET_ATON('127.1') FROM t;",
     "SELECT INET_NTOA(3520061480) FROM t;",
     "SELECT SLEEP(10) FROM t;",
     "SELECT UUID() FROM t;",
     "SELECT c.c_city, l.lo_shipmode,l.lo_supplycost,MAX(l. lo_supplycost)\nFROM ssbm.lineorder l, ssbm.customer c WHERE l.lo_custkey = c.c_custkey GROUP\nBY l.lo_shipmode;",
     "SELECT lo_orderpriority, AVG(lo_supplycost) FROM ssbm.lineorder GROUP\nBY LO_ORDERPRIORITY;",
     "SELECT c.c_mktsegment,COUNT(*) FROM ssbm.lineorder l, ssbm.customer c\nWHERE l.lo_custkey = c.c_custkey GROUP BY c.c_mktsegment;",
     "SELECT COUNT(DISTINCT lo_orderkey) FROM ssbm.lineorder;",
     "SELECT lo_shipmode,MAX(lo_supplycost),MIN(lo_supplycost) FROM\nssbm.lineorder GROUP BY lo_shipmode;",
     "select owner,covar_pop(avg_row_len, avg_space) from all_tables group\nby owner;",
     "select owner,covar_samp(avg_row_len, avg_space) as covar from\nall_tables group by owner;",
     "select corr(quantity, commission) from sales;",
     "select max_entents, corr(max_trans, initial_extent) from data group by\nmax_entents;",
     "SELECT color_type,in_date,color_count FROM t3 ORDER BY\ncolor_type,in_date;",
     "SELECT color_type,in_date,color_count FROM t3 ORDER BY\ncolor_type,in_date;",
     "SELECT NVL(color_type,'') as\ncolor_type_show,DECODE(color_type,NULL,f_YearMonth || '\u5408\u8ba1\n',NVL(f_YearMonth,color_type || ' \u5c0f\u8ba1')) AS\nf_YearMonth_show,SUM(color_count) FROM (SELECT\ncolor_type,DATE_FORMAT(in_date, '%Y-%m') as f_YearMonth,color_count FROM t3)\nt GROUP BY GROUPING SETS(color_type,f_YearMonth) ORDER BY\ncolor_type,f_YearMonth;",
     "DROP TABLE IF EXISTS t1;",
     "CREATE TABLE t1(i int, j int);",
     "INSERT INTO t1\nVALUES(2,1),(2,3),(2,3),(2,5),(3,2),(3,2),(3,2),(3,4),(3,1),(3,5);",

     "DROP TABLE IF EXISTS t1;",
     "CREATE TABLE t1(i int, j int);",
     "INSERT INTO t1\nVALUES(2,1),(2,3),(2,3),(2,5),(3,2),(3,2),(3,2),(3,4),(3,1),(3,5);",
     "DROP TABLE IF EXISTS t1;",
     "CREATE TABLE t1(i int, j int);",
     "INSERT INTO t1\nVALUES(2,1),(2,3),(2,3),(2,5),(3,2),(3,2),(3,2),(3,4),(3,1),(3,5);",
     "DROP TABLE IF EXISTS t1;",
     "CREATE TABLE t1(i int, j int,k int);",
     "INSERT INTO t1\nVALUES(2,1,4),(2,3,6),(2,3,4),(2,5,8),(3,2,2),(3,2,4),(3,2,2),(3,4,6),(3,1\n,2),(3,5,8);",

     "DROP TABLE IF EXISTS t1;",
     "CREATE TABLE t1(i int, j int,k int);",
     "INSERT INTO t1\nVALUES(2,1,4),(2,3,6),(2,3,4),(2,5,8),(3,2,2),(3,2,4),(3,2,2),(3,4,6),(3,1\n,2),(3,5,8);",
     "SELECT *,AVG(k) OVER(PARTITION BY i ORDER BY j DESC) AS avg FROM t1;",
     "SELECT *,AVG(DISTINCT k) OVER(PARTITION BY i) AS avg FROM t1;",
     "DROP TABLE IF EXISTS t2;",
     "CREATE TABLE t2(i int,j int,k int);",
     "INSERT INTO t2\nVALUES(2,1,4),(2,3,6),(2,3,4),(2,5,8),(3,2,2),(3,2,4),(3,2,2),(3,4,6),(3,1\n,2),(3,5,8);",


     "DROP TABLE IF EXISTS t_olap;",
     "CREATE TABLE t_olap(result int, area varchar(200));",
     "INSERT INTO t_olap VALUES(550,'\u5929\u6d25'),(600,'\u6e56\u5317'),(670,'\u6e56\u5317');",
     "INSERT INTO t_olap VALUES(448,'\u5929\u6d25'),(490,'\u5317\u4eac'),(598,'\u5929\u6d25\n'),('700','\u6e56\u5317');",
     "INSERT INTO t_olap VALUES(528,'\u5929\u6d25'),(446,'\u5317\u4eac'),(568,'\u5929\u6d25\n'),('682','\u6e56\u5317');",
     "SELECT * FROM t_olap GROUP BY area,result ORDER BY area,result;",

     "create table t1(i int,v varchar(10));",
     "insert into t1 values (2,'a'),(2,'b');",
     "select * from t1;",
     "select i,v,grouping(i),grouping(v) from t1 group by rollup(i,v);",
    #
    # "select i,v,grouping(i),grouping(v) from t1 group by grouping sets(i,v);",
     "select i,v,grouping(i),grouping(v) from t1 group by rollup(i,v) order\nby grouping(v) desc;",
     "select i,v,grouping(i),grouping(v) from t1 group by rollup(i,v) having\ngrouping(v)>0;",
     # "select *, var_pop(totalamount) over (partition by uname order by dt)\nas var_pop from tt;",
     # "select *, var_samp(totalamount) over (partition by uname order by dt)\nas var_samp from tt;",
     "SELECT C.C_CITY, L.LO_SHIPMODE,L.LO_SUPPLYCOST,MAX(L.LO_SUPPLYCOST)\nFROM SSBM.LINEORDER L, SSBM.CUSTOMER C WHERE L.LO_CUSTKEY=C.C_CUSTKEY GROUP\nBY L.LO_SHIPMODE;",
     # "select *, cume_dist() over (partition by uname order by dt) as cume_dist\nfrom tt;",
     # "select *, ntile(2) over (partition by uname order by dt) as ntile from\ntt;",
     # "select *, ntile('2') over (partition by uname order by dt) as ntile from\ntt;",
     # "select *, ntile(2.1) over (partition by uname order by dt) as ntile from\ntt;",
     # "select *, first_value(totalamount) over (partition by uname order by\ndt) as first_value from tt;",
     # "select *, first_value('const') over (partition by uname order by dt)  - 298 -  \u5357\u5927\u901a\u7528\u6570\u636e\u6280\u672f\u80a1\u4efd\u6709\u9650\u516c\u53f8  \fGBase 8a MPP Cluster SQL\u53c2\u8003\u624b\u518c\nas first_value from tt;",
     # "select *, first_value(NULL) over (partition by uname order by dt) as\nfirst_value from tt;",
     # "select *, last_value(totalamount) over (partition by uname order by dt)\nas last_value from tt;",
     # "select *, last_value('const') over (partition by uname order by dt) as\nlast_value from tt;",
     # "select *, last_value(NULL) over (partition by uname order by dt) as\nlast_value from tt;",
     # "select *, nth_value(totalamount, 2) over (partition by uname order by\ndt) as nth_value from tt;",
     # "select *, nth_value(totalamount, NULL) over (partition by uname order\nby dt) as nth_value from tt;",
     # "select *, nth_value(totalamount, 0) over (partition by uname order by\ndt) as nth_value from tt;",
     # "select *, nth_value('const', 2) over (partition by uname order by dt)\nas nth_value from tt;",
     "DROP TABLE IF EXISTS t1;",
     "CREATE TABLE t1(i int, j int);",
     "INSERT INTO t1\nVALUES(2,1),(2,3),(2,3),(2,5),(3,2),(3,2),(3,2),(3,4),(3,1),(3,5);",
     "SELECT *, ROWID, ROWID(t1) FROM t1;",
     "DROP TABLE IF EXISTS t1;",
     "CREATE TABLE t1(i int, j int);",
     "INSERT INTO t1\nVALUES(2,1),(2,3),(2,3),(2,5),(3,2),(3,2),(3,2),(3,4),(3,1),(3,5);",
     "SELECT * FROM t1 WHERE ROWID = 1;",
     "CREATE DATABASE test1;",
     "DROP DATABASE IF EXISTS test;",
     "CREATE TABLE t1(a int, b int) ;",
     # "CREATE TABLE t2(a int, b int) REPLICATED;",
     "SHOW CREATE TABLE t2;",
     "DESC t2;",
     "CREATE TABLE t1 (f_username varchar(10) comment 'name' ) ;",
     "DESC t1;",
     "SHOW CREATE TABLE t1;",
     "CREATE TABLE t7(a INT, b DECIMAL, c FLOAT, d DATETIME);",
     "INSERT INTO t7 VALUES(1,2,3.345,'2011-11-11\n11:11:11'),(3,5,5.678,'2011-11-11 22:22:22');",
     "CREATE TABLE t8 SELECT * FROM t7;",
     "SELECT * FROM t8;",
     "CREATE TABLE t11 SELECT a,b FROM t7 WHERE d>'2011-11-11 11:11:11' UNION\nALL SELECT a,b FROM t7 WHERE d='2011-11-11 11:11:11';",
     "SELECT * FROM t11;",
     # "CREATE TABLE t5(a int,b datetime);",
     "INSERT INTO t5 VALUES(1,NOW());",
     "CREATE TABLE t6 LIKE t5;",
     "SHOW CREATE TABLE t6;",
     "SELECT * FROM t6;",
     # "CREATE TABLE t5(a int,b datetime) REPLICATED;",
     "INSERT INTO t5 VALUES(1,NOW());",
     "DROP TABLE t6;",
     "CREATE TABLE t6 LIKE t5;",
     "SHOW CREATE TABLE t6;",
     "USE test;",
     "CREATE TEMPORARY TABLE tem_table (a int);",
     "INSERT INTO tem_table VALUES(1),(2),(7),(9);",
     "SELECT * FROM tem_table;",
     "EXIT\nBye\n$ gccli -uroot --nice_time_format -p\nEnter password  GBase client 8.5.1.2 build 25847. Copyright (c) 2004-2013, GBase. All Rights\nReserved.  gbase> USE test;",
     "SELECT * FROM tem_table;",
     # "CREATE TABLE t1 (a int,b varchar(10)) REPLICATED;",
     "CREATE TEMPORARY TABLE t1 (a int,b varchar(10));",
     "CREATE TEMPORARY TABLE t1 (a int) NOCOPIES;",
     "SHOW CREATE TABLE t1;",
     "INSERT INTO t1 VALUES(1),(2),(7),(9);",
     "EXIT\nBye  $ gccli -uroot --nice_time_format -p\nEnter password  GBase client 8.5.1.2 build 25847. Copyright (c) 2004-2013, GBase. All Rights\nReserved.  gbase> USE test;",
     "SELECT * FROM t1;",
     # "CREATE TEMPORARY TABLE t1 (a int,b varchar(10)) DISTRIBUTED BY ('a');",
     "SHOW CREATE TABLE t1;",
     # "CREATE TEMPORARY TABLE t1 (a int,b varchar(10)) REPLICATED;",
     "SHOW CREATE TABLE t1;",
     "CREATE TABLE t7(a INT, b DECIMAL, c FLOAT, d DATETIME);",
     "INSERT INTO t7 VALUES(1,2,3.345,'2011-11-11\n11:11:11'),(3,5,5.678,'2011-11-11 22:22:22');",
     "CREATE TEMPORARY TABLE t8 AS SELECT * FROM t7;",
     "EXIT\nBye  $ gccli \u2013uroot \u2013p\nEnter password:  GBase client 8.5.1.2 build 26068. Copyright (c) 2004-2013, GBase. All Rights\nReserved.  gbase>\ngbase> USE test;",
     "SHOW CREATE TABLE t8;",
     "CREATE TEMPORARY TABLE t8 LIKE t7;",
     "SELECT * FROM t8;",
     "SHOW CREATE TABLE t8;",
     "USE test;",
     # "CREATE TABLE t_1 (a int) NOCOPIES;",
     # "CREATE TABLE t_2 (a int) NOCOPIES;",
     # "CREATE TABLE t_3 (a int) NOCOPIES;",
     "SELECT * FROM gbase.table_distribution WHERE is_nocopies='YES';",
     # "CREATE TABLE t1 (a int) NOCOPIES;",
     "SHOW CREATE TABLE t1;",
     # "CREATE TABLE t1 (a int,b varchar(10)) DISTRIBUTED BY ('a') NOCOPIES;",
     "SHOW CREATE TABLE t1;",
     # "CREATE TEMPORARY TABLE t1 (a int,b varchar(10)) DISTRIBUTED BY ('a')\nNOCOPIES;",
     "SHOW CREATE TABLE t1;",
     "CREATE TABLE t7(a INT, b DECIMAL, c FLOAT, d DATETIME);",
     "INSERT INTO t7 VALUES(1,2,3.345,'2011-11-11\n11:11:11'),(3,5,5.678,'2011-11-11 22:22:22');",
     "DROP TABLE IF EXISTS t8;",
     # "CREATE TABLE t8 NOCOPIES AS SELECT * FROM t7;",
     "SELECT * FROM t8;",
     "CREATE TABLE t (f_1 int);",
     "DESC t;",
     "ALTER TABLE t ADD COLUMN name1 varchar(20) AFTER f_1;",
     "DESC t;",
     "ALTER TABLE t ADD COLUMN name2 varchar(10);",
     "DESC t;",
     "ALTER TABLE t ADD COLUMN (name3 varchar(30),address varchar(40));",
     "DESC t;",
     "ALTER TABLE t DROP COLUMN name3,DROP COLUMN name2;",
     "DESC t;",
     "ALTER TABLE t ADD COLUMN(phone varchar(20), sex int), DROP COLUMN f_1;",
     "DESC t;",
     "SHOW TABLES;",
     "ALTER TABLE t RENAME ttt2;",
     "SHOW TABLES;",
     "CREATE TABLE t (a int DEFAULT 1,b varchar(10), c varchar(10));",
     "DESC t;",
     "ALTER TABLE t CHANGE b d varchar(10);",
     "DESC t;",
     "CREATE TABLE t(a int ,b varchar(10),c bool);",
     "DESC t;",
     "ALTER TABLE t  MODIFY b varchar(10) FIRST;",
     "DESC t;",
     "ALTER TABLE t MODIFY b varchar(10) AFTER c;",
     "DESC t;",
     # "CREATE TABLE t1 (a int) NOCOPIES;",
     "SHOW CREATE TABLE t1;",
     "ALTER TABLE t1 DROP NOCOPIES;",
     "SHOW CREATE TABLE t1;",
     "ALTER TABLE t DROP NOCOPIES;",
     "SELECT COUNT(*) FROM lineitem;",
     "SELECT MIN(rowid),MAX(rowid) FROM lineitem;",
     "DELETE FROM lineitem WHERE rowid <130000000;",
     "SELECT COUNT(*) FROM lineitem;",
     "ALTER TABLE lineitem SHRINK SPACE;",
     "DROP TABLE IF EXISTS t;",
     "CREATE TABLE t(a varchar(10));",
     "ALTER TABLE t CHANGE a b varchar(20);",
     "DESC t;",
     "DROP TABLE IF EXISTS t;",
     "CREATE TABLE t(a int,b varchar(10),c bool);",
     "DESC t;",
     "ALTER TABLE t  MODIFY b varchar(20) FIRST;",
     "DESC t;",
     "ALTER TABLE t MODIFY b varchar(30) AFTER c;",
     "DESC t;",
     "SELECT table_schema,table_name,table_rows FROM\ninformation_schema.tables WHERE table_schema='test' AND table_name = 'tx1';",
     "USE test;",
     "RENAME TABLE test.tx1 to test.tx_1;",
     "SELECT table_schema,table_name,table_rows FROM\ninformation_schema.tables WHERE table_schema='test' AND table_name = 'tx_1';",
     "USE test;",
     # "CREATE TABLE b (a decimal(12,5) DEFAULT NULL, KEY idx_a (a) USING HASH\nGLOBAL);",
     "INSERT INTO b VALUES(1),(2),(3);",
     "SELECT * FROM b;",
     "TRUNCATE TABLE b;",
     "SELECT * FROM b;",
     "CREATE VIEW test.v_t AS SELECT name1 AS name,address FROM t;",
     "SELECT * FROM v_t;",
     "CREATE OR REPLACE VIEW test.v_t AS SELECT name1 AS name,address,sex FROM\nt;",
     "SELECT * FROM v_t;",
     "DESC v_t;",
     "ALTER VIEW test.v_t(a, b) AS SELECT name,address FROM t;",
     "DESC v_t;",
     "SELECT * FROM v_t;",
     "DROP VIEW IF EXISTS test.v_t;",
     # "CREATE INDEX idx2 on t1(b) USING HASH GLOBAL;",
     # "CREATE INDEX idx3 on t1(b) key_block_size=16384 USING HASH GLOBAL;",
     # "CREATE INDEX idx4 on t1(b) key_dc_size=50 USING HASH GLOBAL;",
     "ALTER TABLE t ADD INDEX h2(a) key_dc_size=1 key_block_size=4096 USING\n- 348 -  \u5357\u5927\u901a\u7528\u6570\u636e\u6280\u672f\u80a1\u4efd\u6709\u9650\u516c\u53f8  \fGBase 8a MPP Cluster SQL\u53c2\u8003\u624b\u518c\nHASH;",
     "DROP INDEX pt ON t;",
     "SHOW INDEX FROM test.tx1;",
     # "CREATE TABLE t(nameid int, name varchar(50)) AUTOEXTEND ON NEXT 1M;",
     "SHOW CREATE TABLE t;",
     "ALTER TABLE t AUTOEXTEND ON NEXT 2M;",
     "SHOW CREATE TABLE t;",
     "ALTER TABLE t AUTOEXTEND OFF;",
     # "CREATE TABLE t1(a int) AUTOEXTEND ON NEXT 3G;",
     "DROP TABLE IF EXISTS t1;",
     # "CREATE TABLE t1 (a int DEFAULT NULL,b varchar(10) COMPRESS(3));",
     "SHOW CREATE TABLE t1;",
     "DROP TABLE IF EXISTS t2;",
     # "CREATE TABLE t2 (a int COMPRESS(3),b varchar(10) COMPRESS(5));",
     "SHOW CREATE TABLE t1;",
     # "ALTER TABLE t1 ALTER a COMPRESS(1);",
     "SHOW CREATE TABLE t1;",
     # "CREATE TABLE t2 (a int ,b varchar(10) NULL COMPRESS(5));",
     "SHOW CREATE TABLE t2;",
     # "ALTER TABLE t2 ALTER b COMPRESS(3);",
     "SHOW CREATE TABLE t2;",
     # "ALTER TABLE t2 ALTER a COMPRESS(4);",
     "SHOW CREATE TABLE t2;",
     # "CREATE TABLE t1 (a int, b varchar(10)) COMPRESS(0,0) REPLICATED;",
     # "CREATE TABLE t2 (a int, b varchar(10)) COMPRESS(1,3);",
     # "CREATE TABLE t3 (a int, b varchar(10)) COMPRESS(5,5);",
     "SHOW CREATE TABLE t2;",
     # "ALTER TABLE t2 ALTER compress(5,5);",
     "SHOW CREATE TABLE t2;",
     "USE test;",
     # "CREATE TABLE t(a int,b int,c int,d int,GROUPED a(b,c) COMPRESS(5));",
     "SHOW CREATE TABLE t;",
     "CREATE TABLE t(a int,b int,c int,d int,GROUPED (b,c),GROUPED (d));",
     "SHOW CREATE TABLE t;",
     "CREATE TABLE t(a int,b int,c int,d int,GROUPED a(b,c),GROUPED (a));",
     "SHOW CREATE TABLE t;",
     "DROP TABLE IF EXISTS t;",
     "CREATE TABLE t (a int,b int,c int,d int,GROUPED a(b,c),GROUPED a(d));",
     "SHOW PROCESSLIST;",
     "DROP TABLE IF EXISTS t;",
     "CREATE TABLE t(a int,b int,c int,d int,GROUPED a(b,c)) COMPRESS(5,5);",
     "SHOW CREATE TABLE t;",
     "DROP TABLE IF EXISTS t;",
     "CREATE TABLE t(a int,b int,c int,d int,GROUPED a(b,c) COMPRESS(3))\nCOMPRESS(5,5);",
     "SHOW CREATE TABLE t;",
     "DROP TABLE t2;",
     "CREATE TABLE t2(a int,b int,c int,d int);",
     "ALTER TABLE t2 ADD GROUPED (a,b,c);",
     "SHOW CREATE TABLE t2;",
     "DROP TABLE t2;",
     "CREATE TABLE t2(a int,b int,c int,d int, GROUPED a(a,b));",
     "ALTER TABLE t2 ADD GROUPED c(c,d);",
     "SHOW CREATE TABLE t2;",
     "DROP TABLE t2;",
     "CREATE TABLE t2 (a int, b varchar(10),c int ,d int);",
     "ALTER TABLE t2 ADD GROUPED c(c,d) COMPRESS(3);",
     "SHOW CREATE TABLE t2;",
     "ALTER TABLE t2 DROP GROUPED c;",
     "SHOW CREATE TABLE t2;",
     "CREATE TABLE t0(id int) REPLICATED;",
     "INSERT INTO t0 VALUES(1),(2),(3),(4),(5),(6),(2),(3),(1);",
     "SELECT * FROM t0;",
     "CREATE TABLE t0(id int) REPLICATED;",
     "INSERT INTO t0(id) SELECT DISTINCT lo_custkey FROM ssbm.lineorder LIMIT\n15;",
     "SELECT * FROM t0;",
     "CREATE TABLE t0(id int DEFAULT 1) REPLICATED;",
     "INSERT INTO t0 (id) VALUES(DEFAULT);",
     "INSERT INTO t0 (id) VALUES(DEFAULT(id));",
     "SELECT * FROM t0;",
     "INSERT INTO t1(b) VALUES(1);",
     "INSERT INTO t1(b) VALUES (2);",
     "INSERT INTO t1(b) VALUES (3);",
     "INSERT INTO t1(b) VALUES (4);",
     "INSERT INTO t1(b) VALUES (5);",
     "SELECT * FROM t1 ORDER BY a;",
     "INSERT INTO t1(b) VALUES (6),(7);",
     "SELECT * FROM t1 ORDER BY a;",
     "CREATE TABLE t0(id int) REPLICATED;",
     "CREATE TABLE t2(id int);",
     "INSERT INTO t0(id) VALUES(1),(2),(3),(4),(5),(6),(2),(3),(1);",
     "INSERT INTO t2(id) VALUES(1),(2),(4);",
     "SELECT * FROM t0;",
     "UPDATE t0 SET t0.id = t0.id+1 WHERE t0.id > 1;",
     "SELECT * FROM t0;",
     "SELECT * FROM t0;",
     "UPDATE t0 SET t0.id = 10 WHERE t0.id IN (SELECT t2.id FROM t2);",
     "SELECT * FROM t0;",
     "CREATE TABLE t0(id int) REPLICATED;",
     "INSERT INTO t0(id) VALUES(1),(2),(3),(4),(5),(6),(2),(3),(1);",
     "SELECT * FROM t0;",
     "UPDATE t0 SET t0.id = (SELECT id FROM t0 WHERE id = 6);",
     "CREATE TABLE student (stu_no int, stu_name varchar(200),stu_sex int)\nDISTRIBUTED BY('stu_no');",
     "INSERT INTO student (stu_no,stu_name,stu_sex)\nVALUES(1,'Tom',0),(2,'Jim',0),(3,'Rose',1);",
     "SELECT * FROM student;",
     "UPDATE student SET stu_no = 4 WHERE stu_no = 2;",
     "SELECT * FROM t2 ORDER BY a;",
     "UPDATE t2 SET b=89.3 where c <1000;",
     "SELECT * FROM t2 WHERE c <1000;",
     "SELECT * FROM t2 WHERE c >=1000;",
     "CREATE TABLE t1 (f_1 int);",
     "INSERT INTO t1 values(1),(2),(3);",
     "SELECT * FROM t1;",
     "SET gbase_fast_update = 1;",
     "UPDATE t1 SET f_1 = 10 WHERE f_1= 1;",
     "SELECT * FROM t1;",
     "DELETE FROM t0 WHERE t0.id > 6;",
     "DELETE FROM t0 WHERE t0.id IN ( 1,2,3);",
     "DELETE FROM t0;",
     "INSERT INTO t0 values(1),(2),(3),(4),(5),(6),(7),(8);",
     "DELETE FROM t0 WHERE t0.ID IN (SELECT id FROM t0);",
     "INSERT INTO t0 values(1),(2),(3),(4),(5),(6),(7),(8);",
     "DELETE FROM t0 tt WHERE tt.id=8;",
     "DELETE t0 tt WHERE tt.id=1;",
     "SELECT * FROM t0;",
     "DELETE t0 WHERE id = 2;",
     "SELECT stu_no, stu_sex,SUM(stu_sex) FROM student GROUP BY stu_no;",
     "SELECT CASE stu_sex WHEN 0 THEN '\u7537' ELSE '\u5973' END AS\nstu_sexname,COUNT(stu_sex) AS stu_count FROM student GROUP BY stu_sex;",
     "SELECT a.stu_name,math,english,sum(math+english) AS total FROM student\na INNER JOIN result b ON a.stu_no = b.stu_no GROUP BY a.stu_no ORDER BY a.stu_no;",
     "SELECT a.stu_name,math,english,SUM(math+english) AS total FROM student\n- 388 -  \u5357\u5927\u901a\u7528\u6570\u636e\u6280\u672f\u80a1\u4efd\u6709\u9650\u516c\u53f8  \fGBase 8a MPP Cluster SQL\u53c2\u8003\u624b\u518c\na INNER JOIN result b ON a.stu_no = b.stu_no GROUP BY a.stu_no HAVING total >\n180 ORDER BY total DESC;",
     "SELECT a.stu_name,math,english,sum(math+english) AS total FROM student\na INNER JOIN result b ON a.stu_no = b.stu_no GROUP BY a.stu_no ORDER BY a.stu_no;",
     "SELECT SUM(lo_quantity),lo_orderkey FROM ssbm.lineorder GROUP BY\nlo_orderkey ORDER BY lo_orderkey  LIMIT 10;",
     "SELECT * FROM t1 LIMIT 10;",
     "SELECT * FROM t1 LIMIT 3 OFFSET 2;",
     "select * from (select * from r1 start with id2 = 2 connect by prior id2\n= id2) x;",
     "SELECT level, t1.* FROM t1 CONNECT BY PRIOR b = level START WITH a = 0;",
     "SELECT /*+ first_rows(5) */ t1.a FROM t1 LIMIT 10;",
     "SELECT t1.c_name,t2.lo_orderkey FROM ssbm.customer AS\nt1,ssbm.lineorder AS t2 WHERE t1.c_custkey = t2.lo_custkey LIMIT 5;",
     "SELECT t1.stu_name,t2.c_no FROM student t1 LEFT OUTER JOIN course t2\nON t1.stu_name=t2.stu_name WHERE c_no IS NULL;",
     "SELECT * FROM t1;",
     "SELECT * FROM t2;",
     "SELECT * FROM t1 FULL JOIN t2 on t1.a = t2.a;",
     "(SELECT * FROM t1 LEFT JOIN t2 ON t1.a = t2.a) UNION (SELECT * FROM t1\nRIGHT JOIN t2 ON t1.a = t2.a);",
     "select * from t3 join t4 on t3.a = t4.a;",
     "select * from t3 join t4 on t3.b = t4.a;",
     "select * from t1 join t2 on t1.a = t2.a;",
     "select * from t1 join t2 on t1.b = t2.a;",
     "select * from t5 join t6 on t5.a = t6.a;",
     "CREATE TABLE student (stu_no int, stu_name varchar(200),stu_sex int);",
     "INSERT INTO student VALUES(4,'King',1),(5,'Smith',1);",
     "SELECT stu_name FROM student WHERE stu_name LIKE 'S%'\nUNION\nSELECT stu_name FROM student WHERE stu_name LIKE '%K%'\nORDER BY stu_name LIMIT 10;",
     "(SELECT c_name FROM ssbm.customer WHERE c_name LIKE '%00002%' ORDER BY\nc_name LIMIT 10)  \u5357\u5927\u901a\u7528\u6570\u636e\u6280\u672f\u80a1\u4efd\u6709\u9650\u516c\u53f8  - 409 -  \fGBase 8a MPP Cluster SQL\u53c2\u8003\u624b\u518c\nUNION\n(SELECT c_name FROM ssbm.customer WHERE c_name LIKE '%00003%'ORDER BY\nc_name LIMIT 10);",
     "SELECT REPEAT('a',1) UNION SELECT REPEAT('b',10);",
     "SELECT c_custkey FROM ssbm.customer UNION SELECT c_name FROM\nssbm.customer LIMIT 1;",
     "CREATE TABLE t_student (sno int, sname varchar(100),sdate datetime);",
     "INSERT INTO t_student VALUES(1,'Tom',NOW()),(2,'Jim',NOW());",
     "SELECT * FROM t_student;",
     "CREATE TABLE t_Result (sno int, sresult decimal(10,2),sdate timestamp);",
     "INSERT INTO t_result VALUES(1,99.5,NOW()),(2,100,NOW());",
     "SELECT * FROM t_result;",
     "SELECT sno,sdate FROM t_student UNION SELECT sno,sdate FROM t_result;",
     "USE test;",
     "CREATE TABLE t1(a char(10));",
     "CREATE TABLE t2(a char(255));",
     "CREATE TABLE ta AS SELECT * FROM t1 UNION SELECT * FROM t2;",
     "DESC ta;",
     "SELECT a ,b FROM t1;",
     "SELECT c AS a, d AS b FROM t2;",
     "SELECT a ,b FROM t1 INTERSECT SELECT c AS a, d AS b FROM t2;",
     "SELECT a,b FROM t1;",
     "SELECT c AS a, d AS b FROM t2;",
     "SELECT a ,b FROM t1 MINUS SELECT c AS a, d AS b FROM t2;",
     "SELECT * FROM t1 ORDER BY i;",
     "SELECT * FROM t2 ORDER BY i;",
     "MERGE INTO t1 USING t2 ON t1.i=t2.i WHEN MATCHED THEN UPDATE SET\nt1.vc=t2.vc WHEN NOT MATCHED THEN INSERT(t1.i,t1.vc) VALUES(t2.i,t2.vc);",
     "SELECT * FROM t1 ORDER BY i;",
     "SELECT * FROM t1 ORDER BY i;",
     "SELECT * FROM t2 ORDER BY i;",
     "MERGE INTO t1 t USING t2 ON t.i=t2.i WHEN MATCHED THEN UPDATE SET\nt.vc=t2.vc WHEN NOT MATCHED THEN INSERT (t.i,t.vc) VALUES (t2.i,t2.vc);",
     "SELECT * FROM t1 ORDER BY i;",
     "SELECT * FROM t1 ORDER BY a;",
     "SELECT * FROM tt ORDER BY a;",
     "MERGE INTO tt USING t1 ON t1.b=tt.b WHEN MATCHED THEN UPDATE SET tt.c='b'\nWHEN NOT MATCHED THEN INSERT (tt.b) VALUES(t1.b);",
     "SELECT * FROM t1 ORDER BY a;",
     "SELECT * FROM tt ORDER BY a;",
     "set gbase_hdfs_namenodes=\"192.168.10.1,192.168.10.2\";",
     "SELECT * FROM test.t INTO OUTFILE 'hdp://hadoop@\n192.168.10.1:50070/export/test.tbl' OUTFILEMODE BY HDFS;",
     "select * from aa into outfile '/home/davies/out.txt' fields escaped by\n'' terminated by '|' optionally double_enclosed by '\"' null_value 'gg\"gg';",
     "SELECT * FROM t INTO OUTFILE '/home/gbase/temp/unescaped_2.txt' FIELDS\nTERMINATED BY '2' OPTIONALLY ENCLOSED BY '\"';",
     "SELECT * FROM t INTO OUTFILE '/home/gbase/temp/unescaped_3.txt' FIELDS\nTERMINATED BY '2' ENCLOSED BY '';",
     "SELECT * FROM t INTO OUTFILE '/home/gbase/temp/unescaped_4.txt' FIELDS\nTERMINATED BY '2' OPTIONALLY ENCLOSED BY '';",
     "SELECT * FROM t INTO OUTFILE '/home/gbase/temp/unescaped_5.txt' FIELDS\nTERMINATED BY '2';",
     "SELECT * FROM test.t INTO OUTFILE '/home/gbase/temp/d.txt' FIELDS\nTERMINATED BY '\\t' TERMINATED BY ';",
     "SELECT * FROM test.t INTO OUTFILE '/home/gbase/temp/e.txt' FIELDS\nTERMINATED BY ';",
     # "SELECT NVL(color_type,'') as\ncolor_type_show,NVL(DECODE(color_type,NULL,f_YearMonth || '\u5408\u8ba1\n',NVL(f_YearMonth,color_type || ' \u5c0f\u8ba1')),'\u603b\u8ba1') AS\nf_YearMonth_show,SUM(color_count) FROM (SELECT\ncolor_type,DATE_FORMAT(in_date, '%Y-%m') as f_YearMonth,color_count FROM t3)\nt GROUP BY CUBE(color_type,f_YearMonth) ORDER BY color_type,f_YearMonth into\noutfile '/home/gbase/temp/t3.txt';",
     "SELECT * FROM product INTO OUTFILE '/home/gbase/temp/product.txt'\nFIELDS TERMINATED BY ';",
     "SELECT * FROM t7 INTO OUTFILE '/home/gbase/t7.txt' FIELDS TERMINATED\nBY ',';",
     "SELECT * FROM gs INTO OUTFILE '/home/gbase/temp/gs_b.txt' FIELDS\nENCLOSED BY '@';",
     "SELECT * FROM gs INTO OUTFILE '/home/gbase/temp/gs_c.txt' FIELDS\nENCLOSED BY '\"';",
     "SELECT * FROM gs INTO OUTFILE '/home/gbase/temp/gs_d.txt' FIELDS\n\u5357\u5927\u901a\u7528\u6570\u636e\u6280\u672f\u80a1\u4efd\u6709\u9650\u516c\u53f8  - 441 -  \fGBase 8a MPP Cluster SQL\u53c2\u8003\u624b\u518c\nOPTIONALLY ENCLOSED BY '\"';",
     "SELECT * FROM gs INTO OUTFILE '/home/gbase/temp/gs_e.txt' FIELDS ESCAPED\nBY 'c';",
     "SELECT * FROM gs INTO OUTFILE '/home/gbase/temp/gs_e.txt' FIELDS ESCAPED\nBY '6c@#';",
     "SELECT * FROM gs INTO OUTFILE '/home/gbase/temp/gs_f.txt' LINES\nTERMINATED BY '@#$';",
     "SELECT * FROM gs INTO OUTFILE '/home/gbase/temp/gs_g.txt' LINES STARTING\nBY '@#$';",
     "select * from aa into outfile '/home/davies/out.txt' fields escaped by\n'' terminated by '|' double_enclosed by '\"' null_value 'gg\"gg';",
     "select * from gt into outfile '/home/davies/a' null_value 'aaaa';",
     "SELECT * FROM gs INTO OUTFILE '/home/gbase/temp/gs_g.txt' OUTFILE MODE\nBY LOCAL;",
     "SELECT * FROM gs INTO OUTFILE\n'HDP://192.168.153.32:50070/export/gs_g.txt?user=gbase' OUTFILEMODE BY HDFS;",
     "SELECT * FROM gs INTO OUTFILE '/home/gbase/temp/gs_g.txt' WRITEMODE BY\nNORMAL;",
     "SELECT * FROM gs INTO OUTFILE '/home/gbase/temp/gs_g.txt' WRITEMODE BY\nOVERWRITES;",
     "SELECT * FROM test INTO OUTFILE\n'HDP://192.168.153.21:50070/export/test.txt?user=gbase' OUTFILEMODE BY HDFS\nFILECOUNT 3;",
     "select * from test;",
     "SELECT * FROM test INTO OUTFILE '/home/gbase/temp/test.txt' FILESIZE\n33554432;",
     "SELECT * FROM gs INTO OUTFILE '/home/gbase/temp/gs_g.gz' WRITEMODE BY\nNORMAL;",
     "SELECT * FROM gs INTO OUTFILE '/home/gbase/temp/gs_g.snappy' WRITEMODE\nBY NORMAL;",
     "SELECT * FROM gs INTO OUTFILE '/home/gbase/temp/gs_g.lzo' WRITEMODE BY\nNORMAL;",
     "select * from test;",
     "SELECT * FROM test INTO OUTFILE '/home/gbase/temp/test.tbl' fields\nterminated by \u2018|\u2019 with head;",
     "select * from test_3;",
     "select * from test_3 into outfile '/home/gbase/test.txt'  character set  gbk;",
     "select * from test_2;",
     "select * from test_2 into outfile '/home/gbase/test.txt' fields length\n'11,5,9';",
     "SELECT * FROM gs INTO OUTFILE '/home/gbase/null_1.txt';",
     "SELECT * FROM gs INTO OUTFILE '/home/gbase/null_2.txt' FIELDS ENCLOSED\nBY '\"';",
     "SELECT * FROM gs INTO OUTFILE '/home/gbase/null_3.txt' FIELDS ESCAPED\nBY '|';",
     "SELECT * FROM gs INTO OUTFILE '/home/gbase/temp/esp_1.txt' FIELDS\nESCAPED BY '';",
     "SELECT * FROM gs INTO OUTFILE '/home/gbase/temp/esp_2.txt' FIELDS\nESCAPED BY '' ENCLOSED BY '\"';",
     "SELECT * FROM gs INTO OUTFILE '/home/gbase/temp/test_1.txt';",
     "SELECT * FROM gs INTO OUTFILE '/home/gbase/temp/gs.txt' FIELDS\nTERMINATED BY 'ih';",
     "SELECT * FROM gs INTO OUTFILE '/home/gbase/temp/n_1.txt';",
     "SELECT * FROM gs INTO OUTFILE '/home/gbase/temp/n_2.txt' LINES\nTERMINATED BY ';",
     "SELECT * FROM gs INTO OUTFILE '/home/gbase/temp/length_1.txt' FIELDS\nTERMINATED BY '' ENCLOSED BY '' ESCAPED BY '';",
     "SELECT * FROM gs INTO OUTFILE '/home/gbase/temp/length_2.txt' FIELDS\nTERMINATED BY '' ENCLOSED BY '' ESCAPED BY '';",
     "create table t(id int);",
     "insert into t values(1);",
     "rmt:select * from t into outfile '/home/gbase/t.txt';",
     "rmt:select * from t into outfile '/home/gbase/t.txt';",
     "select @@error_count;",
     "rmt:SELECT * FROM cust INTO OUTFILE '/home/gbase/temp/cust.txt';",
     "rmt:SELECT * FROM cust INTO OUTFILE '/home/gbase/temp/cust.txt' FIELDS\nTERMINATED BY ',';",
     "rmt:SELECT * FROM cust INTO OUTFILE '/home/gbase/temp/cust.txt' FIELDS\nTERMINATED BY ';",
     "rmt:SELECT * FROM cust INTO OUTFILE '/home/gbase/temp/cust.txt' FIELDS\nTERMINATED BY ';",
     "SELECT * FROM product;",
     "rmt:SELECT * FROM product INTO OUTFILE '/home/gbase/temp/product.txt'\nFIELDS TERMINATED BY ';",
     "load data infile 'ftp://test:abc/def@192.168.0.1/data/*.tbl' into table t data_format 3;",
     "load data infile 'ftp://test:abc%2Fdef@192.168.0.1/data/*.tbl' into table t data_format\n3;",
     "load data infile 'ftp://test:abc\\def@192.168.0.1/data/*.tbl' into table t data_format 3;",
     "load data infile 'ftp://test:abc\\\\def@192.168.0.1/data/*.tbl' into table t data_format\n3;",
     "set gbase_hdfs_namenodes=\"192.168.10.1,192.168.10.2\";",
     "LOAD DATA INFILE 'fdp://hadoop@192.168.10.1:50070/data/test.tbl' INTO TABLE test.t;",
     "LOAD DATA INFILE 'ftp://192.168.0.1/pub/lineitem.tbl\uff0c\nhttp://192.168.0.2/lineitem.tbl' INTO TABLE test.lineitem FIELDS\nTERMINATED BY '|' ENCLOSED BY '\"' LINES TERMINATED  \u5357\u5927\u901a\u7528\u6570\u636e\u6280\u672f\u80a1\u4efd\u6709\u9650\u516c\u53f8  BY '\\n';",
     "LOAD DATA INFILE 'ftp://192.168.10.114/data/*' INTO TABLE test.t;",
     "LOAD DATA INFILE 'ftp://192.168.0.1/pub/lineitem.tbl' INTO TABLE\n- 484 -  \u5357\u5927\u901a\u7528\u6570\u636e\u6280\u672f\u80a1\u4efd\u6709\u9650\u516c\u53f8  \fGBase 8a MPP Cluster SQL\u53c2\u8003\u624b\u518c  test.lineitem FIELDS TERMINATED BY '|' ENCLOSED BY '\"' LINES TERMINATED\nBY '\\n';",
     "LOAD DATA INFILE 'http://10.10.120.226/timestamp.txt' INTO TABLE\ntest.ttimestamp DATA_FORMAT 3 FIELDS TERMINATED BY '|' TIMESTAMP FORMAT\n'%Y-%m-%d %H:%i:%s';",
     "load data infile 'ftp://192.168.88.141/load_data/table_fields.tbl' into table test.t\nfields terminated by ',' table_fields 'i, vc, dt date \"%H:%i:%s %Y-%m-%d\",\ndt1 date \"%Y-%m-%d %H:%i:%s\"';",
     "select * from test.t;",
     "select * from test. data_test;",
     "select * from test. data_test;",
     "load data infile 'ftp://192.168.88.141/load_data/autofill.tbl' into table\ntest.t fields terminated by '|'  autofill;",
     "select * from t;",
     "load data infile 'ftp://192.168.88.141/load_data/definer.tbl' into table\ntest.t data_format 4 fields length'1,10,10';",
     "select * from t;",
     "select * from test. data_test;",
     "Load data infile 'data.tbl' into table t fields terminated by '|' set\nc='2016-06-06 18:08:08',d='default',e=20.6;",
     "select * from t;",
     "load data infile 'http://192.168.153.32/1.txt' into table test fields\nterminated by '|' null_value 'gg';",
     "select * from test;",
     "load data infile 'http://192.168.153.32/1.txt' into table test_1 fields\nterminated by '|' preserve blanks;",
     "select * from test_1;",
     "load data infile 'http://192.168.153.32/1.txt' into table test_2 fields\nterminated by '|' max_bad_records 1;",
     "select * from test_2;",
     "select * from test_3;",
     "load data infile 'http://192.168.153.32/*.txt' into table test_3 fields\nterminated by '|' skip_bad_file 1;",
     "select * from test_3;",
     "load data infile 'http://192.168.153.32/1.txt' into table test_4 fields\nterminated by '|' min_chunk_size 33554432;",
     "select * from test_4;",
     "load data infile 'http://192.168.153.32/1.txt' into table test_5 fields\nterminated by '|' max_data_processors 2;",
     "select * from test_5;",
     "load data infile 'http://192.168.153.32/1.txt' into table test_6 fields\nterminated by '|' parallel 2;",
     "select * from test_6;",
     "load data infile 'http://192.168.153.32/1.txt' into table test_7 fields\nterminated by '|'  nosplit;",
     "select * from test_7;",
     "load data infile 'http://192.168.153.32/1.txt' into table test_8  character  set gbk fields terminated by '|';",
     "select * from test_8;",
     "load data infile 'http://192.168.153.32/1.txt' into table test_9 fields\nterminated by '||' trace 1 TRACE_PATH '/home/gbase/test/';",
     # "start kafka consumer t10;",
     # "show kafka consumer t10;",
     # "stop kafka consumer t10;",
     "DESCRIBE customer c_custkey;",
     "USE ssbm;",
     "SELECT COUNT(*) FROM customer;",
     "USE gbase;",
     "SELECT COUNT(*) FROM ssbm.customer;",
     "SET AUTOCOMMIT = 1;",
     "SHOW VARIABLES LIKE '%trace%';",
     "SET GLOBAL gbase_sql_trace =on;",
     "SHOW VARIABLES LIKE '%gbase_sql_trace%';",
     "QUIT\nBye  # gccli -uroot -p\nEnter password:  GBase client 8.5.1.2 build 26867. Copyright (c) 2004-2013, GBase. All Rights\nReserved.  \u5357\u5927\u901a\u7528\u6570\u636e\u6280\u672f\u80a1\u4efd\u6709\u9650\u516c\u53f8  - 509 -  \fGBase 8a MPP Cluster SQL\u53c2\u8003\u624b\u518c\ngbase> SHOW VARIABLES LIKE '%trace%';",
     "SET  global gbase_high_priority_weight = 80;",
     "CREATE USER admin IDENTIFIED BY 'admin';",
     "EXIT\nBye  $ gccli -uadmin \u2013p\nEnter password:\nGBase client 8.5.1.2 build 25847. Copyright (c) 2004-2013, GBase. All Rights\nReserved.\ngbase>  4.6.1.2  DROP USER  \u8bed\u6cd5\u683c\u5f0f\uff1a\nDROP USER user;",
     # "DROP USER admin;",
     "SET PASSWORD = PASSWORD('admin');",
     "EXIT\nBye  \u4f7f\u7528\u65b0\u5bc6\u7801\u91cd\u65b0\u767b\u5f55\u6570\u636e\u5e93\uff1a\n$ gccli -uroot -p\nEnter password:  \u5357\u5927\u901a\u7528\u6570\u636e\u6280\u672f\u80a1\u4efd\u6709\u9650\u516c\u53f8  - 513 -  \fGBase 8a MPP Cluster SQL\u53c2\u8003\u624b\u518c  GBase client 8.5.1.2 build 25847. Copyright (c) 2004-2013, GBase. All Rights\nReserved.  \u793a\u4f8b 2\uff1aSET PASSWORD FOR\uff0c\u4e3a\u6307\u5b9a\u7684\u767b\u5f55\u96c6\u7fa4\u7684\u7528\u6237\u8bbe\u7f6e\u5bc6\u7801\u3002\n$ gccli -uroot --nice_time_format -p\nEnter password:  GBase client 8.5.1.2 build 25847. Copyright (c) 2004-2013, GBase. All Rights\nReserved.  gbase> SET PASSWORD FOR admin = PASSWORD('adminnew');",
     "EXIT\nBye  $ gccli -uadmin --nice_time_format -p\nEnter password:  GBase client 8.5.1.2 build 25847. Copyright (c) 2004-2013, GBase. All Rights\nReserved.  4.6.2 \u6743\u9650\u7ba1\u7406\n4.6.2.1  GRANT\u548cREVOKE  \u8bed\u6cd5\u683c\u5f0f\uff1a\nGRANT\npriv_type [(column_list)]\n[, priv_type [(column_list)]] ...  - 514 -  \u5357\u5927\u901a\u7528\u6570\u636e\u6280\u672f\u80a1\u4efd\u6709\u9650\u516c\u53f8  \fGBase 8a MPP Cluster SQL\u53c2\u8003\u624b\u518c  ON [object_type] priv_level\nTO user IDENTIFIED BY [[PASSWORD] [password]]\n[WITH with_option ...]  object_type:\nTABLE  | FUNCTION  | PROCEDURE  priv_level:\n*  | *.*  | table_name  | database_name.*  | database_name.table_name  | database_name.routine_name  REVOKE\npriv_type [(column_list)]\n[, priv_type [(column_list)]] ...\nON [object_type] priv_level\nFROM user  REVOKE ALL PRIVILEGES, GRANT OPTION\nFROM user  4.6.2.2  \u6743\u9650\u7ea7\u522b  GRANT \u548c REVOKE \u8bed\u53e5\u5141\u8bb8\u7cfb\u7edf\u7ba1\u7406\u5458\u5904\u7406\u7528\u6237\u6743\u9650\u7684\u8d4b\u4e88\u4e0e\u6536\u56de\u3002\n\u5bf9\u4e8e GRANT \u548c REVOKE \u4e2d\u7684\u6743\u9650\u7ea7\u522b\uff0cpriv_type \u6307\u5b9a\u4e3a\u4e0b\u5217\u4efb\u4e00\u79cd\u3002\n\u5357\u5927\u901a\u7528\u6570\u636e\u6280\u672f\u80a1\u4efd\u6709\u9650\u516c\u53f8  - 515 -  \fGBase 8a MPP Cluster SQL\u53c2\u8003\u624b\u518c  \u6743  \u9650  \u610f  \u4e49  ALL [PRIVILEGES]  \u8bbe\u7f6e\u9664GRANT OPTION\u4e4b\u5916\u7684\u6240\u6709\u7b80\u5355\u6743\u9650  ALTER  \u5141\u8bb8\u4f7f\u7528ALTER TABLE  ALTER ROUTINE  \u66f4\u6539\u6216\u53d6\u6d88\u5df2\u5b58\u50a8\u7684\u5b50\u7a0b\u5e8f  CREATE  \u5141\u8bb8\u4f7f\u7528CREATE TABLE  CREATE ROUTINE  \u521b\u5efa\u5df2\u5b58\u50a8\u7684\u5b50\u7a0b\u5e8f  CREATE TEMPORARY\nTABLES  \u5141\u8bb8\u4f7f\u7528CREATE TEMPORARY TABLE  CREATE USER  \u5141\u8bb8\u4f7f\u7528CREATE USER, DROP USER, RENAME USER\u548c\nREVOKE ALL PRIVILEGES  CREATE VIEW  \u5141\u8bb8\u4f7f\u7528CREATE VIEW  DELETE  \u5141\u8bb8\u4f7f\u7528DELETE  DROP  \u5141\u8bb8\u4f7f\u7528DROP TABLE  EXECUTE  \u5141\u8bb8\u7528\u6237\u8fd0\u884c\u5df2\u5b58\u50a8\u7684\u5b50\u7a0b\u5e8f  FILE  \u5141\u8bb8\u4f7f\u7528SELECT...FROM TABLE_NAME INTO OUTFILE\n\u7b49  GRANT OPTION  \u5141\u8bb8\u6388\u4e88\u6743\u9650  INDEX  \u5141\u8bb8\u4f7f\u7528CREATE INDEX\u548cDROP INDEX  INSERT  \u5141\u8bb8\u4f7f\u7528INSERT  PROCESS  \u5141\u8bb8\u4f7f\u7528SHOW FULL PROCESSLIST  RELOAD  \u5141\u8bb8\u4f7f\u7528FLUSH  SELECT  \u5141\u8bb8\u4f7f\u7528SELECT  SHOW DATABASES  SHOW DATABASES\u663e\u793a\u6240\u6709\u6570\u636e\u5e93  SHOW VIEW  \u5141\u8bb8\u4f7f\u7528SHOW CREATE VIEW  SHUTDOWN  \u5141\u8bb8\u4f7f\u7528gbaseadmin shutdown  SUPPER  \u5141\u8bb8\u4f7f\u7528KILL\u548cSET GLOBAL\u8bed\u53e5  UPDATE  \u5141\u8bb8\u4f7f\u7528UPDATE  USAGE  \u4ec5\u4ec5\u7528\u4e8e\u8fde\u63a5\u767b\u5f55\u6570\u636e\u5e93\uff0c\u4e3b\u8981\u7528\u6765\u8bbe\u7f6ewith\noption\u90e8\u5206  EVENT  \u521b\u5efa\u3001\u4fee\u6539\u3001\u5220\u9664EVENT\u7684\u6743\u9650  \u8bf4\u660e\uff1a\n\u6570\u636e\u5e93\u6743\u9650\u5206\u4e3a\u6570\u636e\u5e93\u5bf9\u8c61\u64cd\u4f5c\u6743\u9650\u7b49\u4ee5\u4e0b 5 \u7c7b\uff1a\n\u6570\u636e\u5e93\u5bf9\u8c61\u64cd\u4f5c\u7c7b\u6743\u9650\uff1b\n- 516 -  \u5357\u5927\u901a\u7528\u6570\u636e\u6280\u672f\u80a1\u4efd\u6709\u9650\u516c\u53f8  \fGBase 8a MPP Cluster SQL\u53c2\u8003\u624b\u518c  \u6570\u636e\u64cd\u4f5c\u7c7b\u6743\u9650\uff1b\n\u5b58\u50a8\u8fc7\u7a0b\u3001\u81ea\u5b9a\u4e49\u51fd\u6570\u6267\u884c\u6743\u9650\uff1b\n\u6570\u636e\u67e5\u770b\u7c7b\u6743\u9650\uff1b\n\u6570\u636e\u5e93\u6743\u9650\uff08\u5305\u542b\u7528\u6237\u7ba1\u7406\uff09\u7ba1\u7406\u6743\u9650\u3002\n\u8868\u683c\u4e2d\u7684\u201aALL\u201b\u662f\u4e2a\u7279\u6b8a\u6743\u9650\u4e0d\u5728\u4e0a\u8ff0\u5206\u7c7b\u4e2d\uff0c\u5b83\u662f\u628a GRANT OPTION\n\u4e4b\u5916\u7684\u6240\u6709\u6743\u9650\u8d4b\u4e88\u6307\u5b9a\u7528\u6237\u3002\n\u8981\u4f7f\u7528 GRANT \u6216 REVOKE\uff0c\u5fc5\u987b\u62e5\u6709 GRANT OPTION \u6743\u9650\uff0c\u5e76\u4e14\u62e5\u6709\u6388\u4e88\n\u6216\u6536\u56de\u6743\u9650\u3002\n\u5bf9\u4e8e GRANT \u548c REVOKE \u8bed\u53e5\uff0cpriv_level \u53ef\u4ee5\u6388\u4e88\u4e0d\u540c\u7ea7\u522b\u7684\u6743\u9650\uff1a\n\u5168\u5c40\u7ea7\uff08Global level\uff09\n\u5168\u5c40\u6743\u9650\u5e94\u7528\u5230\u7ed9\u5b9a\u670d\u52a1\u5668\u7684\u6240\u6709\u6570\u636e\u5e93\u4e0a\u3002\u8fd9\u4e9b\u6743\u9650\u5b58\u50a8\u5728\ngbase.user \u8868\u4e2d\u3002\u53ea\u53ef\u4ee5\u901a\u8fc7 GRANT ALL ON *.*\u548c REVOKE ALL ON *.*\u6388\u4e88\n\u548c\u6536\u56de\u5168\u5c40\u6743\u9650\u3002\n\u6570\u636e\u5e93\u7ea7\uff08Database level\uff09\n\u6570\u636e\u5e93\u6743\u9650\u5e94\u7528\u4e8e\u7ed9\u5b9a\u6570\u636e\u5e93\u7684\u6240\u6709\u5bf9\u8c61\u4e0a\u3002\u8fd9\u4e9b\u6743\u9650\u5b58\u50a8\u5728 gbase.db\n\u548c gbase.host \u8868\u4e2d\u3002\u53ea\u53ef\u4ee5\u901a\u8fc7 GRANT ALL ON db_name.*\u548c REVOKE ALL ON\ndb_name.*\u6388\u4e88\u548c\u6536\u56de\u6570\u636e\u5e93\u6743\u9650\u3002\n\u8868\u7ea7\uff08Table level\uff09\n\u8868\u6743\u9650\u5e94\u7528\u4e8e\u7ed9\u5b9a\u8868\u7684\u6240\u6709\u5217\u3002\u8fd9\u4e9b\u6743\u9650\u5b58\u50a8\u5728 gbase.tables_priv \u8868\n\u4e2d\u3002\u53ea\u53ef\u4ee5\u901a\u8fc7 GRANT ALL ON db_name.tbl_name \u548c REVOKE ALL ON\ndb_name.tbl_name \u6388\u4e88\u548c\u6536\u56de\u8868\u6743\u9650\u3002\n\u5217\u7ea7\uff08column level\uff09\n\u5217\u6743\u9650\u5e94\u7528\u4e8e\u8868\u4e2d\u7684\u6307\u5b9a\u5217\u3002\u8fd9\u4e9b\u6743\u9650\u5b58\u50a8\u5728 gbase.tables_priv \u8868\u4e2d\u3002\n\u53ea\u53ef\u4ee5\u901a\u8fc7 GRANT SELECT,INSERT,UPDATE\uff08column\uff09 ON db_name.tb1_name\n\u548c REVOKE SELECT\uff08column\uff09 ON db_name.tb1_name \u6388\u4e88\u548c\u6536\u56de\u5217\u6743\u9650\u3002  \u5357\u5927\u901a\u7528\u6570\u636e\u6280\u672f\u80a1\u4efd\u6709\u9650\u516c\u53f8  - 517 -  \fGBase 8a MPP Cluster SQL\u53c2\u8003\u624b\u518c  \u793a\u4f8b 1\uff1a\u4e3a t \u8868\u4e2d\u7684\u5217 a \u8d4b\u4e88 SELECT \u6743\u9650\u3002\ngbase> CREATE TABLE t(a int,b varchar(40));",
     "INSERT INTO t VALUES (1,'test'),(2,'share');",
     "GRANT SELECT(a) ON test.t TO admin;",
     "SELECT * FROM gbase.tables_priv;",
     "REVOKE SELECT(a) ON test.t FROM admin;",
     "SELECT * FROM gbase.tables_priv;",
     "create user uer1 ;",
     "grant usage on *.* to uer1  with task_priority  1;",
     "SHOW COLUMNS FROM t FROM test;",
     "SHOW COLUMNS FROM test.t;",
     "SHOW CREATE DATABASE test;",
     "SHOW CREATE FUNCTION fn_count;",
     "SHOW CREATE PROCEDURE casedemo;",
     "SHOW CREATE TABLE test.t;",
     "SHOW CREATE VIEW student_v;",
     "create synonym gbase.s1 for test.t1;",
     "create public synonym s1 for gbase.t1;",
     "create synonym s2 for t1@dblink1;",
     "create public synonym s2 for t1@dblink2;",
     "show create synonym gbase.s1;",
     "show create public synonym s1;",
     "show create synonym s2;",
     "show create public synonym s2;",
     "SHOW FUNCTION STATUS;",
     "SHOW GRANTS FOR 'root'@'%';",
     "USE test;",
     "CREATE TABLE t_index(a int, b varchar(10));",
     "CREATE INDEX idx_a ON t_index(a) USING HASH GLOBAL;",
     "SHOW INDEX FROM t_index FROM test;",
     "SHOW PROCEDURE STATUS;",
     "SHOW PROCESSLIST;",
     "SHOW STATUS;",
     "SHOW STATUS LIKE 'Key%';",
     "SHOW TABLES FROM ssbm like 's%';",
     "SHOW FULL TABLES FROM ssbm LIKE 's%';",
     "SHOW DISTRIBUTION TABLES;",
     "SHOW TABLE STATUS FROM ssbm WHERE name = 'part';",
     "SHOW VARIABLES;",
     "SHOW VARIABLES LIKE '%buffer%';",
     "SHOW WARNINGS;",
     "SHOW VARIABLES LIKE 'max_error_count';",
     "SET max_error_count=1;",
     "SELECT 1 > '6x' FROM t;",
     "SELECT @@warning_count;",
     "SHOW WARNINGS;",
     "show priorities;",
     "show priorities where \"node name\" = 'node1';",
     "show priorities where status ='OFF';",
     "show priorities where \"node name\" = 'node1';",
     "show priorities where \"node name\" = 'node1';",
     "SHOW GCLUSTER ENTRY;",
     "create table t1(i int);",
     "insert into t1 values (1),(2),(3),(4),(5);",
     "create view v1 as select * from t1;",
     "create synonym syn_1 for t1;",
     "create synonym syn_syn_1 for syn_1;",
     "create synonym syn_2 for test.v1;",
     "create public synonym syn_3 for test.t1;",
     "  CREATE FUNCTION f_add(i int,j int) RETURNS int\n-> BEGIN\n->  RETURN i+j;",
     "create synonym syn_add for f_add;",
     "create synonym syn_proc for f_proc;",
     "drop synonym syn_1;",
     "select count(*) from syn_1;",
     "select count(*) from syn_syn_1;",
     "select count(*) from syn_2;",
     "select count(*) from syn_3;",
     "select syn_add(1,2);",
     "call syn_proc();",
     "DELIMITER //\n",
     "CREATE PROCEDURE proc_count (OUT param1 INT,IN param2 VARCHAR(10))\nBEGIN\nSELECT COUNT(*) INTO param1 FROM ssbm.customer WHERE c_nation= param2;",
     "CALL proc_count(@count1,'JORDAN');",
     "SELECT @count1;",
     "  CREATE FUNCTION hello (s CHAR(20)) RETURNS CHAR(50)\nRETURN CONCAT('Hello, ',s,'!');",
     "SET @result = hello('world');",
     "SELECT @result;",
     "CREATE FUNCTION fn_count (param varchar(10)) RETURNS INT\nBEGIN\nSELECT COUNT(*)/5 INTO @count FROM ssbm.customer WHERE c_nation= param;",
     "SET @result = fn_count('JORDAN');",
     "SELECT @result;",
     "ALTER PROCEDURE proc_count COMMENT 'new comment';",
     "ALTER FUNCTION fn_count COMMENT 'new comment';",
     "DROP PROCEDURE IF EXISTS proc_count;",
     "DROP FUNCTION IF EXISTS fn_count;",
     "USE test;",
     "DROP PROCEDURE proc_count",
     "CREATE PROCEDURE proc_count (OUT param1 INT,IN param2 varchar(10))\nBEGIN\nSELECT COUNT(*) INTO param1 FROM ssbm.customer WHERE c_nation= param2;",
     "CALL proc_count(@count1, 'JORDAN')",
     "SELECT @count1 ;",
     "USE test;",
     "  DROP FUNCTION hello   ; CREATE FUNCTION hello (s CHAR(20)) RETURNS VARCHAR(50)\nRETURN CONCAT('Hello, ',s,'!')   ; DELIMITER ;",
     "SET @result = hello('world');",
     "SELECT @result;",
     "SHOW CREATE FUNCTION fn_count;",
     "  DROP PROCEDURE IF EXISTS dodeclare   ; CREATE PROCEDURE dodeclare (p1 INT)\nBEGIN\nDECLARE intX INT;",
     "CALL dodeclare(1000);",
     "  DROP PROCEDURE IF EXISTS dodeclare   ; CREATE PROCEDURE dodeclare (p1 INT)\nBEGIN\nDECLARE intX INT;",
     "CALL dodeclare(1000);",
     "DROP PROCEDURE IF EXISTS curdemo   ; CREATE PROCEDURE curdemo()\nBEGIN\nDECLARE done INT DEFAULT 0;",
     "CALL curdemo;",
     "SELECT region,count FROM products;",
     "  DROP PROCEDURE IF EXISTS dodeclare   ; CREATE PROCEDURE dodeclare (p1 INT)\nBEGIN\n- 568 -  \u5357\u5927\u901a\u7528\u6570\u636e\u6280\u672f\u80a1\u4efd\u6709\u9650\u516c\u53f8  \fGBase 8a MPP Cluster SQL\u53c2\u8003\u624b\u518c\nDECLARE intX INT;",
     "CALL dodeclare(1000);",
     "  DROP PROCEDURE IF EXISTS doselect_into   ; CREATE PROCEDURE doselect_into (p1 INT)\nBEGIN\nDECLARE intX INT;",
     "CALL doselect_into (1000);",
     "  DROP FUNCTION IF EXISTS fn_count  ; CREATE FUNCTION fn_count (param VARCHAR(10)) RETURNS INT\nBEGIN\nSELECT COUNT(*)/3 INTO @count FROM ssbm.customer WHERE c_nation=\n'JORDAN';",
     "SET @result = fn_count ('JORDAN');",
     "SELECT @result;",
     "  DROP PROCEDURE IF EXISTS doiterate   ; CREATE PROCEDURE doiterate(p1 INT)\nBEGIN\nlabel1: LOOP\nSET p1 = p1 + 1;",
     "CALL doiterate(1);",
     "SELECT @x;",
     "  DROP PROCEDURE IF EXISTS casedemo  ; CREATE PROCEDURE casedemo()\n-> BEGIN\n-> SELECT DISTINCT CASE WHEN c_nation='CHINA' THEN '\u4e2d\u56fd' WHEN  \u5357\u5927\u901a\u7528\u6570\u636e\u6280\u672f\u80a1\u4efd\u6709\u9650\u516c\u53f8  - 573 -  \fGBase 8a MPP Cluster SQL\u53c2\u8003\u624b\u518c\nc_nation='MOROCCO' THEN '\u6469\u6d1b\u54e5' WHEN c_nation='JORDAN' THEN '\u7ea6\u65e6' ELSE '\n\u5176\u5b83\u56fd\u5bb6' END \u4e2d\u6587\uff0cc_nation FROM ssbm.customer  LIMIT 10;",
     "CALL casedemo();",
     "  DROP PROCEDURE IF EXISTS casedemo2  ; CREATE PROCEDURE casedemo2()\nBEGIN\nSELECT DISTINCT CASE c_nation WHEN 'CHINA' THEN '\u4e2d\u56fd' WHEN 'MOROCCO' THEN\n'\u6469\u6d1b\u54e5' WHEN 'JORDAN' THEN '\u7ea6\u65e6' ELSE '\u5176\u5b83\u56fd\u5bb6' END \u4e2d\u6587\uff0cc_nation FROM\nssbm.customer LIMIT 10;",
     "CALL casedemo2();",
     "  DROP PROCEDURE IF EXISTS doiterate  ; CREATE PROCEDURE doiterate(p1 INT)\nBEGIN\nlabel1: LOOP\nSET p1 = p1 + 1;",
     "CALL doiterate(1);",
     "SELECT @x;",
     "  DROP PROCEDURE IF EXISTS dorepeat  ; CREATE PROCEDURE dorepeat(p1 INT)\nBEGIN\nSET @x = 0;",
     "CALL dorepeat(1000);",
     "SELECT @x;",
     "  DROP PROCEDURE IF EXISTS doWhile  ; CREATE PROCEDURE doWhile(p1 INT)\nBEGIN\nSET @x = 0;",
     "CALL dowhile(1000);",
     "SELECT @x;",
     "  DROP PROCEDURE IF EXISTS doiterate   ; CREATE PROCEDURE doiterate(p1 INT)\nBEGIN\nlabel1: LOOP\nSET p1 = p1 + 1;",
     "CALL doiterate(1);",
     "SELECT @x;",
     "  DROP PROCEDURE IF EXISTS curdemo   ; CREATE PROCEDURE curdemo()\nBEGIN\nDECLARE done INT DEFAULT 0;",
     "CALL curdemo;",
     "SELECT region,count FROM products;",
     "  DROP PROCEDURE IF EXISTS docursor   ; CREATE PROCEDURE docursor()\n- 584 -  \u5357\u5927\u901a\u7528\u6570\u636e\u6280\u672f\u80a1\u4efd\u6709\u9650\u516c\u53f8  \fGBase 8a MPP Cluster SQL\u53c2\u8003\u624b\u518c\nBEGIN\nDECLARE s_region VARCHAR(40);",
     "CALL docursor();",
     "  DROP PROCEDURE IF EXISTS docursor   ; CREATE PROCEDURE docursor()\nBEGIN\nDECLARE s_region VARCHAR(40);",
     "CALL docursor();",
     "  CREATE PROCEDURE hunter.test_1()\n-> BEGIN\n->  DECLARE v VARCHAR(200);",
     "CALL hunter.test_1();",
     "  CREATE PROCEDURE hunter.test_1()\n-> BEGIN  - 592 -  ->  DECLARE v VARCHAR(200);",
     "CALL hunter.test_1();",
     "show variables like '%event_scheduler%';",
     "show processlist;",
     "show processlist;",
     "drop table if exists events_list;",
     "create table events_list(event_name varchar(20) not null, event_st\narted timestamp not null);",
     "select * from events_list;",
     "select * from events_list;",
     "show events;",
     "select * from gbase.event;"
    ], [
    'root',
    # 'simpleStatement'
]))
def test_gbase_example(sql, entry_name):
    parser = read_sql(sql)
    tree = getattr(parser, entry_name)()
